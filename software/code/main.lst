ARM GAS  /tmp/ccun4gHj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -imultilib armv6-m
  18              	@ -iprefix /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/
  19              	@ -isysroot /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../arm-none-eabi
  20              	@ -MD code/main.d -MF .dep/main.o.d -MP -MQ code/main.o -D__USES_INITFINI__
  21              	@ -D RUN_FROM_FLASH=1 code/main.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip code/main.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  23              	@ -fomit-frame-pointer -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  30              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
  31              	@ -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  32              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  33              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  34              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings
  35              	@ -fomit-frame-pointer -fpeephole -fprefetch-loop-arrays
  36              	@ -freg-struct-return -fsched-critical-path-heuristic
  37              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  38              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  39              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  40              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  41              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  42              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  43              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  44              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  45              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  46              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  47              	@ -msched-prolog -mthumb -mvectorize-with-neon-quad
  48              	
  49              		.text
  50              	.Ltext0:
  51              		.cfi_sections	.debug_frame
  52              		.global	BUTTONS_REGS
  53              		.data
  54              		.align	2
  55              		.type	BUTTONS_REGS, %object
  56              		.size	BUTTONS_REGS, 4
  57              	BUTTONS_REGS:
ARM GAS  /tmp/ccun4gHj.s 			page 2


  58 0000 00000040 		.word	1073741824
  59              		.global	SENSORS_REGS
  60              		.align	2
  61              		.type	SENSORS_REGS, %object
  62              		.size	SENSORS_REGS, 4
  63              	SENSORS_REGS:
  64 0004 00000050 		.word	1342177280
  65              		.global	LED_REGS
  66              		.align	2
  67              		.type	LED_REGS, %object
  68              		.size	LED_REGS, 4
  69              	LED_REGS:
  70 0008 00000060 		.word	1610612736
  71              		.text
  72              		.align	2
  73              		.global	write_led
  74              		.code	16
  75              		.thumb_func
  76              		.type	write_led, %function
  77              	write_led:
  78              	.LFB0:
  79              		.file 1 "code/main.c"
   1:code/main.c   **** #define __MAIN_C__
   2:code/main.c   **** //?
   3:code/main.c   **** #include <stdint.h>
   4:code/main.c   **** #include <stdbool.h>
   5:code/main.c   **** 
   6:code/main.c   **** // Define the raw base address values for the i/o devices
   7:code/main.c   **** 
   8:code/main.c   **** #define AHB_BUTTONS_BASE                          0x40000000
   9:code/main.c   **** #define AHB_SENSORS_BASE                          0x50000000
  10:code/main.c   **** #define AHB_LED_BASE                              0x60000000
  11:code/main.c   **** 
  12:code/main.c   **** // Define pointers with correct type for access to 32-bit i/o devices
  13:code/main.c   **** //
  14:code/main.c   **** // The locations in the devices can then be accessed as:
  15:code/main.c   **** //    IPORT_REGS[0]
  16:code/main.c   **** //    OPORT_REGS[0]
  17:code/main.c   **** //
  18:code/main.c   **** volatile uint32_t* BUTTONS_REGS = (volatile uint32_t*) AHB_BUTTONS_BASE;
  19:code/main.c   **** volatile uint32_t* SENSORS_REGS = (volatile uint32_t*) AHB_SENSORS_BASE;
  20:code/main.c   **** volatile uint32_t* LED_REGS = (volatile uint32_t*) AHB_LED_BASE;
  21:code/main.c   **** 
  22:code/main.c   **** #include <stdint.h>
  23:code/main.c   **** 
  24:code/main.c   **** //////////////////////////////////////////////////////////////////
  25:code/main.c   **** // Functions provided to access i/o devices
  26:code/main.c   **** //////////////////////////////////////////////////////////////////
  27:code/main.c   **** 
  28:code/main.c   **** void write_led(uint32_t value) {
  80              		.loc 1 28 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85 0000 82B0     		sub	sp, sp, #8	@,,
  86              	.LCFI0:
ARM GAS  /tmp/ccun4gHj.s 			page 3


  87              		.cfi_def_cfa_offset 8
  88 0002 0190     		str	r0, [sp, #4]	@ value, value
  29:code/main.c   **** 
  30:code/main.c   ****   LED_REGS[0] = value;
  89              		.loc 1 30 0
  90 0004 034B     		ldr	r3, .L2	@ tmp111,
  91 0006 1B68     		ldr	r3, [r3]	@ D.4593, LED_REGS
  92 0008 019A     		ldr	r2, [sp, #4]	@ tmp112, value
  93 000a 1A60     		str	r2, [r3]	@ tmp112, *_2
  31:code/main.c   **** 
  32:code/main.c   **** }
  94              		.loc 1 32 0
  95 000c C046     		nop
  96 000e 02B0     		add	sp, sp, #8	@,,
  97              		@ sp needed	@
  98 0010 7047     		bx	lr
  99              	.L3:
 100 0012 C046     		.align	2
 101              	.L2:
 102 0014 00000000 		.word	LED_REGS
 103              		.cfi_endproc
 104              	.LFE0:
 105              		.size	write_led, .-write_led
 106              		.align	2
 107              		.global	read_nFork
 108              		.code	16
 109              		.thumb_func
 110              		.type	read_nFork, %function
 111              	read_nFork:
 112              	.LFB1:
  33:code/main.c   **** 
  34:code/main.c   **** uint32_t read_nFork(void) {
 113              		.loc 1 34 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
  35:code/main.c   ****   
  36:code/main.c   ****   return SENSORS_REGS[0];
 118              		.loc 1 36 0
 119 0018 024B     		ldr	r3, .L6	@ tmp113,
 120 001a 1B68     		ldr	r3, [r3]	@ D.4594, SENSORS_REGS
 121 001c 1B68     		ldr	r3, [r3]	@ D.4595, *_2
  37:code/main.c   **** } 
 122              		.loc 1 37 0
 123 001e 1800     		movs	r0, r3	@, <retval>
 124              		@ sp needed	@
 125 0020 7047     		bx	lr
 126              	.L7:
 127 0022 C046     		.align	2
 128              	.L6:
 129 0024 00000000 		.word	SENSORS_REGS
 130              		.cfi_endproc
 131              	.LFE1:
 132              		.size	read_nFork, .-read_nFork
 133              		.align	2
 134              		.global	read_nCrank
ARM GAS  /tmp/ccun4gHj.s 			page 4


 135              		.code	16
 136              		.thumb_func
 137              		.type	read_nCrank, %function
 138              	read_nCrank:
 139              	.LFB2:
  38:code/main.c   **** 
  39:code/main.c   **** uint32_t read_nCrank(void) {
 140              		.loc 1 39 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
  40:code/main.c   ****   
  41:code/main.c   ****   return SENSORS_REGS[1];
 145              		.loc 1 41 0
 146 0028 024B     		ldr	r3, .L10	@ tmp114,
 147 002a 1B68     		ldr	r3, [r3]	@ D.4596, SENSORS_REGS
 148 002c 0433     		adds	r3, r3, #4	@ D.4596,
 149 002e 1B68     		ldr	r3, [r3]	@ D.4597, *_3
  42:code/main.c   **** } 
 150              		.loc 1 42 0
 151 0030 1800     		movs	r0, r3	@, <retval>
 152              		@ sp needed	@
 153 0032 7047     		bx	lr
 154              	.L11:
 155              		.align	2
 156              	.L10:
 157 0034 00000000 		.word	SENSORS_REGS
 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	read_nCrank, .-read_nCrank
 161              		.align	2
 162              		.global	read_fork_cnt
 163              		.code	16
 164              		.thumb_func
 165              		.type	read_fork_cnt, %function
 166              	read_fork_cnt:
 167              	.LFB3:
  43:code/main.c   **** 
  44:code/main.c   **** uint32_t read_fork_cnt(void) {
 168              		.loc 1 44 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
  45:code/main.c   ****   
  46:code/main.c   ****   return SENSORS_REGS[2];
 173              		.loc 1 46 0
 174 0038 024B     		ldr	r3, .L14	@ tmp114,
 175 003a 1B68     		ldr	r3, [r3]	@ D.4598, SENSORS_REGS
 176 003c 0833     		adds	r3, r3, #8	@ D.4598,
 177 003e 1B68     		ldr	r3, [r3]	@ D.4599, *_3
  47:code/main.c   **** } 
 178              		.loc 1 47 0
 179 0040 1800     		movs	r0, r3	@, <retval>
 180              		@ sp needed	@
 181 0042 7047     		bx	lr
ARM GAS  /tmp/ccun4gHj.s 			page 5


 182              	.L15:
 183              		.align	2
 184              	.L14:
 185 0044 00000000 		.word	SENSORS_REGS
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	read_fork_cnt, .-read_fork_cnt
 189              		.align	2
 190              		.global	read_pedal_cnt
 191              		.code	16
 192              		.thumb_func
 193              		.type	read_pedal_cnt, %function
 194              	read_pedal_cnt:
 195              	.LFB4:
  48:code/main.c   **** 
  49:code/main.c   **** uint32_t read_pedal_cnt(void) {
 196              		.loc 1 49 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
  50:code/main.c   ****   
  51:code/main.c   ****   return SENSORS_REGS[3];
 201              		.loc 1 51 0
 202 0048 024B     		ldr	r3, .L18	@ tmp114,
 203 004a 1B68     		ldr	r3, [r3]	@ D.4600, SENSORS_REGS
 204 004c 0C33     		adds	r3, r3, #12	@ D.4600,
 205 004e 1B68     		ldr	r3, [r3]	@ D.4601, *_3
  52:code/main.c   **** } 
 206              		.loc 1 52 0
 207 0050 1800     		movs	r0, r3	@, <retval>
 208              		@ sp needed	@
 209 0052 7047     		bx	lr
 210              	.L19:
 211              		.align	2
 212              	.L18:
 213 0054 00000000 		.word	SENSORS_REGS
 214              		.cfi_endproc
 215              	.LFE4:
 216              		.size	read_pedal_cnt, .-read_pedal_cnt
 217              		.align	2
 218              		.global	read_nMode
 219              		.code	16
 220              		.thumb_func
 221              		.type	read_nMode, %function
 222              	read_nMode:
 223              	.LFB5:
  53:code/main.c   **** 
  54:code/main.c   **** //uint32_t read_timer(void) {
  55:code/main.c   ****   
  56:code/main.c   **** //  return SENSORS_REGS[4];
  57:code/main.c   **** //}
  58:code/main.c   **** 
  59:code/main.c   **** //void reset_timer(void){
  60:code/main.c   **** //  SENSORS_REGS[4] = 0x00000000;
  61:code/main.c   **** //} 
  62:code/main.c   **** 
ARM GAS  /tmp/ccun4gHj.s 			page 6


  63:code/main.c   **** //uint32_t read_status(void) {
  64:code/main.c   ****   
  65:code/main.c   **** //  return SENSORS_REGS[5];
  66:code/main.c   **** //}
  67:code/main.c   **** 
  68:code/main.c   **** uint32_t read_nMode(void) {
 224              		.loc 1 68 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
  69:code/main.c   ****   
  70:code/main.c   ****   return BUTTONS_REGS[0];
 229              		.loc 1 70 0
 230 0058 024B     		ldr	r3, .L22	@ tmp113,
 231 005a 1B68     		ldr	r3, [r3]	@ D.4602, BUTTONS_REGS
 232 005c 1B68     		ldr	r3, [r3]	@ D.4603, *_2
  71:code/main.c   **** }
 233              		.loc 1 71 0
 234 005e 1800     		movs	r0, r3	@, <retval>
 235              		@ sp needed	@
 236 0060 7047     		bx	lr
 237              	.L23:
 238 0062 C046     		.align	2
 239              	.L22:
 240 0064 00000000 		.word	BUTTONS_REGS
 241              		.cfi_endproc
 242              	.LFE5:
 243              		.size	read_nMode, .-read_nMode
 244              		.align	2
 245              		.global	read_nTrip
 246              		.code	16
 247              		.thumb_func
 248              		.type	read_nTrip, %function
 249              	read_nTrip:
 250              	.LFB6:
  72:code/main.c   **** 
  73:code/main.c   **** uint32_t read_nTrip(void) {
 251              		.loc 1 73 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
  74:code/main.c   ****   
  75:code/main.c   ****   return BUTTONS_REGS[1];
 256              		.loc 1 75 0
 257 0068 024B     		ldr	r3, .L26	@ tmp114,
 258 006a 1B68     		ldr	r3, [r3]	@ D.4604, BUTTONS_REGS
 259 006c 0433     		adds	r3, r3, #4	@ D.4604,
 260 006e 1B68     		ldr	r3, [r3]	@ D.4605, *_3
  76:code/main.c   **** }
 261              		.loc 1 76 0
 262 0070 1800     		movs	r0, r3	@, <retval>
 263              		@ sp needed	@
 264 0072 7047     		bx	lr
 265              	.L27:
 266              		.align	2
ARM GAS  /tmp/ccun4gHj.s 			page 7


 267              	.L26:
 268 0074 00000000 		.word	BUTTONS_REGS
 269              		.cfi_endproc
 270              	.LFE6:
 271              		.size	read_nTrip, .-read_nTrip
 272              		.align	2
 273              		.global	read_together_button
 274              		.code	16
 275              		.thumb_func
 276              		.type	read_together_button, %function
 277              	read_together_button:
 278              	.LFB7:
  77:code/main.c   **** 
  78:code/main.c   **** uint32_t read_together_button(void) {
 279              		.loc 1 78 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
  79:code/main.c   ****   
  80:code/main.c   ****   return BUTTONS_REGS[2];
 284              		.loc 1 80 0
 285 0078 024B     		ldr	r3, .L30	@ tmp114,
 286 007a 1B68     		ldr	r3, [r3]	@ D.4606, BUTTONS_REGS
 287 007c 0833     		adds	r3, r3, #8	@ D.4606,
 288 007e 1B68     		ldr	r3, [r3]	@ D.4607, *_3
  81:code/main.c   **** }
 289              		.loc 1 81 0
 290 0080 1800     		movs	r0, r3	@, <retval>
 291              		@ sp needed	@
 292 0082 7047     		bx	lr
 293              	.L31:
 294              		.align	2
 295              	.L30:
 296 0084 00000000 		.word	BUTTONS_REGS
 297              		.cfi_endproc
 298              	.LFE7:
 299              		.size	read_together_button, .-read_together_button
 300              		.align	2
 301              		.global	connect_digits
 302              		.code	16
 303              		.thumb_func
 304              		.type	connect_digits, %function
 305              	connect_digits:
 306              	.LFB8:
  82:code/main.c   **** 
  83:code/main.c   **** //////////////////////////////////////////////////////////////////
  84:code/main.c   **** // Other Functions
  85:code/main.c   **** //////////////////////////////////////////////////////////////////
  86:code/main.c   **** 
  87:code/main.c   **** 
  88:code/main.c   **** uint32_t connect_digits(uint8_t DP, uint8_t digit3, uint8_t digit2, uint8_t digit1, uint8_t digit0)
 307              		.loc 1 88 0
 308              		.cfi_startproc
 309              		@ args = 4, pretend = 0, frame = 32
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0088 30B5     		push	{r4, r5, lr}	@
ARM GAS  /tmp/ccun4gHj.s 			page 8


 312              	.LCFI1:
 313              		.cfi_def_cfa_offset 12
 314              		.cfi_offset 4, -12
 315              		.cfi_offset 5, -8
 316              		.cfi_offset 14, -4
 317 008a 89B0     		sub	sp, sp, #36	@,,
 318              	.LCFI2:
 319              		.cfi_def_cfa_offset 48
 320 008c 0500     		movs	r5, r0	@ tmp123, DP
 321 008e 0C00     		movs	r4, r1	@ tmp126, digit3
 322 0090 1000     		movs	r0, r2	@ tmp129, digit2
 323 0092 1900     		movs	r1, r3	@ tmp132, digit1
 324 0094 6B46     		mov	r3, sp	@ tmp149,
 325 0096 0733     		adds	r3, r3, #7	@ tmp124,
 326 0098 2A1C     		adds	r2, r5, #0	@ tmp125, tmp123
 327 009a 1A70     		strb	r2, [r3]	@ tmp125, DP
 328 009c 6B46     		mov	r3, sp	@ tmp150,
 329 009e 0633     		adds	r3, r3, #6	@ tmp127,
 330 00a0 221C     		adds	r2, r4, #0	@ tmp128, tmp126
 331 00a2 1A70     		strb	r2, [r3]	@ tmp128, digit3
 332 00a4 6B46     		mov	r3, sp	@ tmp151,
 333 00a6 0533     		adds	r3, r3, #5	@ tmp130,
 334 00a8 021C     		adds	r2, r0, #0	@ tmp131, tmp129
 335 00aa 1A70     		strb	r2, [r3]	@ tmp131, digit2
 336 00ac 01AB     		add	r3, sp, #4	@ tmp133,,
 337 00ae 0A1C     		adds	r2, r1, #0	@ tmp134, tmp132
 338 00b0 1A70     		strb	r2, [r3]	@ tmp134, digit1
  89:code/main.c   ****   uint32_t led_display = 0x00000000;
 339              		.loc 1 89 0
 340 00b2 0023     		movs	r3, #0	@ tmp135,
 341 00b4 0793     		str	r3, [sp, #28]	@ tmp135, led_display
  90:code/main.c   **** 
  91:code/main.c   ****   uint32_t dp = DP << 15;
 342              		.loc 1 91 0
 343 00b6 6B46     		mov	r3, sp	@ tmp152,
 344 00b8 0733     		adds	r3, r3, #7	@ tmp136,
 345 00ba 1B78     		ldrb	r3, [r3]	@ D.4608, DP
 346 00bc DB03     		lsls	r3, r3, #15	@ D.4608, D.4608,
 347 00be 0693     		str	r3, [sp, #24]	@ D.4608, dp
  92:code/main.c   ****   uint32_t d3 = digit3 << 12;
 348              		.loc 1 92 0
 349 00c0 6B46     		mov	r3, sp	@ tmp153,
 350 00c2 0633     		adds	r3, r3, #6	@ tmp137,
 351 00c4 1B78     		ldrb	r3, [r3]	@ D.4608, digit3
 352 00c6 1B03     		lsls	r3, r3, #12	@ D.4608, D.4608,
 353 00c8 0593     		str	r3, [sp, #20]	@ D.4608, d3
  93:code/main.c   ****   uint32_t d2 = digit2 << 8;
 354              		.loc 1 93 0
 355 00ca 6B46     		mov	r3, sp	@ tmp154,
 356 00cc 0533     		adds	r3, r3, #5	@ tmp138,
 357 00ce 1B78     		ldrb	r3, [r3]	@ D.4608, digit2
 358 00d0 1B02     		lsls	r3, r3, #8	@ D.4608, D.4608,
 359 00d2 0493     		str	r3, [sp, #16]	@ D.4608, d2
  94:code/main.c   ****   uint32_t d1 = digit1 << 4;
 360              		.loc 1 94 0
 361 00d4 01AB     		add	r3, sp, #4	@ tmp139,,
 362 00d6 1B78     		ldrb	r3, [r3]	@ D.4608, digit1
ARM GAS  /tmp/ccun4gHj.s 			page 9


 363 00d8 1B01     		lsls	r3, r3, #4	@ D.4608, D.4608,
 364 00da 0393     		str	r3, [sp, #12]	@ D.4608, d1
  95:code/main.c   ****   uint32_t d0 = digit0;
 365              		.loc 1 95 0
 366 00dc 0CAB     		add	r3, sp, #48	@ tmp140,,
 367 00de 1B78     		ldrb	r3, [r3]	@ tmp141, digit0
 368 00e0 0293     		str	r3, [sp, #8]	@ tmp141, d0
  96:code/main.c   ****   
  97:code/main.c   ****   led_display = dp + d3 + d2 + d1 + d0;
 369              		.loc 1 97 0
 370 00e2 069A     		ldr	r2, [sp, #24]	@ tmp142, dp
 371 00e4 059B     		ldr	r3, [sp, #20]	@ tmp143, d3
 372 00e6 D218     		adds	r2, r2, r3	@ D.4609, tmp142, tmp143
 373 00e8 049B     		ldr	r3, [sp, #16]	@ tmp144, d2
 374 00ea D218     		adds	r2, r2, r3	@ D.4609, D.4609, tmp144
 375 00ec 039B     		ldr	r3, [sp, #12]	@ tmp145, d1
 376 00ee D218     		adds	r2, r2, r3	@ D.4609, D.4609, tmp145
 377 00f0 029B     		ldr	r3, [sp, #8]	@ tmp147, d0
 378 00f2 D318     		adds	r3, r2, r3	@ tmp146, D.4609, tmp147
 379 00f4 0793     		str	r3, [sp, #28]	@ tmp146, led_display
  98:code/main.c   ****   
  99:code/main.c   ****   return led_display;
 380              		.loc 1 99 0
 381 00f6 079B     		ldr	r3, [sp, #28]	@ D.4610, led_display
 100:code/main.c   **** }
 382              		.loc 1 100 0
 383 00f8 1800     		movs	r0, r3	@, <retval>
 384 00fa 09B0     		add	sp, sp, #36	@,,
 385              		@ sp needed	@
 386 00fc 30BD     		pop	{r4, r5, pc}
 387              		.cfi_endproc
 388              	.LFE8:
 389              		.size	connect_digits, .-connect_digits
 390              		.global	__aeabi_uidivmod
 391              		.global	__aeabi_uidiv
 392 00fe C046     		.align	2
 393              		.global	main
 394              		.code	16
 395              		.thumb_func
 396              		.type	main, %function
 397              	main:
 398              	.LFB9:
 101:code/main.c   **** 
 102:code/main.c   **** //uint32_t low_pass_filter(uint32_t last_speed, uint32_t present_speed, uint8_t factor) {
 103:code/main.c   ****   
 104:code/main.c   ****   //return last_speed * (1 - factor) + present_speed * factor;
 105:code/main.c   ****   
 106:code/main.c   **** //}
 107:code/main.c   **** 
 108:code/main.c   **** //////////////////////////////////////////////////////////////////
 109:code/main.c   **** // Main Function
 110:code/main.c   **** //////////////////////////////////////////////////////////////////
 111:code/main.c   **** 
 112:code/main.c   **** int main(void) {
 399              		.loc 1 112 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 72
ARM GAS  /tmp/ccun4gHj.s 			page 10


 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0100 30B5     		push	{r4, r5, lr}	@
 404              	.LCFI3:
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 5, -8
 408              		.cfi_offset 14, -4
 409 0102 95B0     		sub	sp, sp, #84	@,,
 410              	.LCFI4:
 411              		.cfi_def_cfa_offset 96
 113:code/main.c   **** 
 114:code/main.c   ****   uint8_t Mode = 0x00;
 412              		.loc 1 114 0
 413 0104 4F23     		movs	r3, #79	@ tmp299,
 414 0106 6B44     		add	r3, r3, sp	@ tmp299,
 415 0108 0022     		movs	r2, #0	@ tmp300,
 416 010a 1A70     		strb	r2, [r3]	@ tmp301, Mode
 115:code/main.c   **** //  Odometer 
 116:code/main.c   ****   uint32_t fork_counter = 0x00000000;
 417              		.loc 1 116 0
 418 010c 0023     		movs	r3, #0	@ tmp302,
 419 010e 1293     		str	r3, [sp, #72]	@ tmp302, fork_counter
 117:code/main.c   ****   uint32_t odometer = 0x00000000;
 420              		.loc 1 117 0
 421 0110 0023     		movs	r3, #0	@ tmp303,
 422 0112 1193     		str	r3, [sp, #68]	@ tmp303, odometer
 118:code/main.c   **** 
 119:code/main.c   **** //  Trip Timer
 120:code/main.c   ****   uint32_t time = 0x00000000;
 423              		.loc 1 120 0
 424 0114 0023     		movs	r3, #0	@ tmp304,
 425 0116 1093     		str	r3, [sp, #64]	@ tmp304, time
 121:code/main.c   ****   uint32_t accumulate_time = 0x00000000;
 426              		.loc 1 121 0
 427 0118 0023     		movs	r3, #0	@ tmp305,
 428 011a 0F93     		str	r3, [sp, #60]	@ tmp305, accumulate_time
 122:code/main.c   ****   uint32_t minute = 0x00000000;
 429              		.loc 1 122 0
 430 011c 0023     		movs	r3, #0	@ tmp306,
 431 011e 0493     		str	r3, [sp, #16]	@ tmp306, minute
 123:code/main.c   **** 
 124:code/main.c   **** //  Average Speed
 125:code/main.c   ****   uint32_t av_ssni_419 = 0x00000000;
 432              		.loc 1 125 0
 433 0120 0023     		movs	r3, #0	@ tmp307,
 434 0122 0E93     		str	r3, [sp, #56]	@ tmp307, av_ssni_419
 126:code/main.c   **** 
 127:code/main.c   **** //  Maximum Speed
 128:code/main.c   ****   uint32_t max_speed = 0x00000000;
 435              		.loc 1 128 0
 436 0124 0023     		movs	r3, #0	@ tmp308,
 437 0126 0D93     		str	r3, [sp, #52]	@ tmp308, max_speed
 129:code/main.c   **** 
 130:code/main.c   **** //  Speedometer
 131:code/main.c   ****   uint32_t speedometer = 0x00000000;
 438              		.loc 1 131 0
 439 0128 0023     		movs	r3, #0	@ tmp309,
ARM GAS  /tmp/ccun4gHj.s 			page 11


 440 012a 0C93     		str	r3, [sp, #48]	@ tmp309, speedometer
 132:code/main.c   **** //  uint32_t last_speed = 0x00000000;
 133:code/main.c   **** //  uint32_t present_speed = 0x00000000;
 134:code/main.c   ****   uint32_t fork_time = 0x00000000;
 441              		.loc 1 134 0
 442 012c 0023     		movs	r3, #0	@ tmp310,
 443 012e 0B93     		str	r3, [sp, #44]	@ tmp310, fork_time
 135:code/main.c   ****   //uint8_t  lpf_factor=0.5;
 136:code/main.c   **** 
 137:code/main.c   **** //  Cadence
 138:code/main.c   ****   uint32_t cadence_meter = 0x00000000;
 444              		.loc 1 138 0
 445 0130 0023     		movs	r3, #0	@ tmp311,
 446 0132 0A93     		str	r3, [sp, #40]	@ tmp311, cadence_meter
 139:code/main.c   **** 
 140:code/main.c   **** //  Calorie
 141:code/main.c   ****   uint32_t calorie = 0x00000000;
 447              		.loc 1 141 0
 448 0134 0023     		movs	r3, #0	@ tmp312,
 449 0136 0993     		str	r3, [sp, #36]	@ tmp312, calorie
 142:code/main.c   **** 
 143:code/main.c   **** //  LED display
 144:code/main.c   ****   uint8_t digits[4];
 145:code/main.c   ****   digits[0] = 0;
 450              		.loc 1 145 0
 451 0138 03AB     		add	r3, sp, #12	@ tmp313,,
 452 013a 0022     		movs	r2, #0	@ tmp314,
 453 013c 1A70     		strb	r2, [r3]	@ tmp315, digits
 146:code/main.c   ****   digits[1] = 0;
 454              		.loc 1 146 0
 455 013e 03AB     		add	r3, sp, #12	@ tmp316,,
 456 0140 0022     		movs	r2, #0	@ tmp317,
 457 0142 5A70     		strb	r2, [r3, #1]	@ tmp318, digits
 147:code/main.c   ****   digits[2] = 0;
 458              		.loc 1 147 0
 459 0144 03AB     		add	r3, sp, #12	@ tmp319,,
 460 0146 0022     		movs	r2, #0	@ tmp320,
 461 0148 9A70     		strb	r2, [r3, #2]	@ tmp321, digits
 148:code/main.c   ****   digits[3] = 0;
 462              		.loc 1 148 0
 463 014a 03AB     		add	r3, sp, #12	@ tmp322,,
 464 014c 0022     		movs	r2, #0	@ tmp323,
 465 014e DA70     		strb	r2, [r3, #3]	@ tmp324, digits
 149:code/main.c   ****   uint8_t DP = 0x07;
 466              		.loc 1 149 0
 467 0150 2323     		movs	r3, #35	@ tmp325,
 468 0152 6B44     		add	r3, r3, sp	@ tmp325,
 469 0154 0722     		movs	r2, #7	@ tmp326,
 470 0156 1A70     		strb	r2, [r3]	@ tmp327, DP
 150:code/main.c   ****   uint8_t digit_index = 0x02;
 471              		.loc 1 150 0
 472 0158 2223     		movs	r3, #34	@ tmp328,
 473 015a 6B44     		add	r3, r3, sp	@ tmp328,
 474 015c 0222     		movs	r2, #2	@ tmp329,
 475 015e 1A70     		strb	r2, [r3]	@ tmp330, digit_index
 151:code/main.c   ****   uint16_t DiscreteDisplay = 0x0000;
 476              		.loc 1 151 0
ARM GAS  /tmp/ccun4gHj.s 			page 12


 477 0160 08AB     		add	r3, sp, #32	@ tmp331,,
 478 0162 0022     		movs	r2, #0	@ tmp332,
 479 0164 1A80     		strh	r2, [r3]	@ tmp333, DiscreteDisplay
 152:code/main.c   ****   bool display = false;
 480              		.loc 1 152 0
 481 0166 1F23     		movs	r3, #31	@ tmp334,
 482 0168 6B44     		add	r3, r3, sp	@ tmp334,
 483 016a 0022     		movs	r2, #0	@ tmp335,
 484 016c 1A70     		strb	r2, [r3]	@ tmp336, display
 153:code/main.c   **** 
 154:code/main.c   **** //  Constant
 155:code/main.c   ****   //uint32_t kinematic = 0.6142;
 156:code/main.c   **** 
 157:code/main.c   **** //  Use-defined Parameters
 158:code/main.c   ****   uint32_t weight = 0x00000046;// default weight is 70kg 
 485              		.loc 1 158 0
 486 016e 4623     		movs	r3, #70	@ tmp337,
 487 0170 0693     		str	r3, [sp, #24]	@ tmp337, weight
 159:code/main.c   ****   uint32_t wheel_size = 0x000000D6; // default wheel size is 214cm
 488              		.loc 1 159 0
 489 0172 D623     		movs	r3, #214	@ tmp338,
 490 0174 0593     		str	r3, [sp, #20]	@ tmp338, wheel_size
 160:code/main.c   **** 
 161:code/main.c   **** //  Initialize
 162:code/main.c   ****   write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 491              		.loc 1 162 0
 492 0176 03AB     		add	r3, sp, #12	@ tmp339,,
 493 0178 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 494 017a 03AB     		add	r3, sp, #12	@ tmp340,,
 495 017c 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 496 017e 03AB     		add	r3, sp, #12	@ tmp341,,
 497 0180 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 498 0182 03AB     		add	r3, sp, #12	@ tmp342,,
 499 0184 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 500 0186 2322     		movs	r2, #35	@ tmp343,
 501 0188 6A44     		add	r2, r2, sp	@ tmp343,
 502 018a 1078     		ldrb	r0, [r2]	@ tmp344, DP
 503 018c 0093     		str	r3, [sp]	@ D.4611,
 504 018e 2B00     		movs	r3, r5	@, D.4611
 505 0190 2200     		movs	r2, r4	@, D.4611
 506 0192 FFF7FEFF 		bl	connect_digits	@
 507 0196 0300     		movs	r3, r0	@ D.4612,
 508 0198 1800     		movs	r0, r3	@, D.4612
 509 019a FFF7FEFF 		bl	write_led	@
 510              	.L77:
 163:code/main.c   **** // reset_timer();
 164:code/main.c   **** 
 165:code/main.c   **** //  Main program -- permernant loop  
 166:code/main.c   ****   while(1){
 167:code/main.c   **** 
 168:code/main.c   ****     if (read_together_button()){
 511              		.loc 1 168 0
 512 019e FFF7FEFF 		bl	read_together_button	@
 513 01a2 031E     		subs	r3, r0, #0	@ D.4612,,
 514 01a4 26D0     		beq	.L35	@,
 169:code/main.c   ****       digit_index = 0x02;
 515              		.loc 1 169 0
ARM GAS  /tmp/ccun4gHj.s 			page 13


 516 01a6 2223     		movs	r3, #34	@ tmp345,
 517 01a8 6B44     		add	r3, r3, sp	@ tmp345,
 518 01aa 0222     		movs	r2, #2	@ tmp346,
 519 01ac 1A70     		strb	r2, [r3]	@ tmp347, digit_index
 170:code/main.c   ****       digits[3] = 0x07;
 520              		.loc 1 170 0
 521 01ae 03AB     		add	r3, sp, #12	@ tmp348,,
 522 01b0 0722     		movs	r2, #7	@ tmp349,
 523 01b2 DA70     		strb	r2, [r3, #3]	@ tmp350, digits
 171:code/main.c   ****       if (Mode != 0x06) {
 524              		.loc 1 171 0
 525 01b4 4F23     		movs	r3, #79	@ tmp351,
 526 01b6 6B44     		add	r3, r3, sp	@ tmp351,
 527 01b8 1B78     		ldrb	r3, [r3]	@ tmp352, Mode
 528 01ba 062B     		cmp	r3, #6	@ tmp352,
 529 01bc 0DD0     		beq	.L36	@,
 172:code/main.c   ****         digits[2] = 0x02;
 530              		.loc 1 172 0
 531 01be 03AB     		add	r3, sp, #12	@ tmp353,,
 532 01c0 0222     		movs	r2, #2	@ tmp354,
 533 01c2 9A70     		strb	r2, [r3, #2]	@ tmp355, digits
 173:code/main.c   ****         digits[1] = 0x01;
 534              		.loc 1 173 0
 535 01c4 03AB     		add	r3, sp, #12	@ tmp356,,
 536 01c6 0122     		movs	r2, #1	@ tmp357,
 537 01c8 5A70     		strb	r2, [r3, #1]	@ tmp358, digits
 174:code/main.c   ****         digits[0] = 0x04;
 538              		.loc 1 174 0
 539 01ca 03AB     		add	r3, sp, #12	@ tmp359,,
 540 01cc 0422     		movs	r2, #4	@ tmp360,
 541 01ce 1A70     		strb	r2, [r3]	@ tmp361, digits
 175:code/main.c   ****         Mode = 0x07;  // go to set wheel size
 542              		.loc 1 175 0
 543 01d0 4F23     		movs	r3, #79	@ tmp362,
 544 01d2 6B44     		add	r3, r3, sp	@ tmp362,
 545 01d4 0722     		movs	r2, #7	@ tmp363,
 546 01d6 1A70     		strb	r2, [r3]	@ tmp364, Mode
 547 01d8 0CE0     		b	.L35	@
 548              	.L36:
 176:code/main.c   ****       }
 177:code/main.c   ****       else {
 178:code/main.c   ****         digits[2] = 0x00;
 549              		.loc 1 178 0
 550 01da 03AB     		add	r3, sp, #12	@ tmp365,,
 551 01dc 0022     		movs	r2, #0	@ tmp366,
 552 01de 9A70     		strb	r2, [r3, #2]	@ tmp367, digits
 179:code/main.c   ****         digits[1] = 0x04;
 553              		.loc 1 179 0
 554 01e0 03AB     		add	r3, sp, #12	@ tmp368,,
 555 01e2 0422     		movs	r2, #4	@ tmp369,
 556 01e4 5A70     		strb	r2, [r3, #1]	@ tmp370, digits
 180:code/main.c   ****         digits[0] = 0x00;
 557              		.loc 1 180 0
 558 01e6 03AB     		add	r3, sp, #12	@ tmp371,,
 559 01e8 0022     		movs	r2, #0	@ tmp372,
 560 01ea 1A70     		strb	r2, [r3]	@ tmp373, digits
 181:code/main.c   ****         Mode = 0x08;  // go to set weight
ARM GAS  /tmp/ccun4gHj.s 			page 14


 561              		.loc 1 181 0
 562 01ec 4F23     		movs	r3, #79	@ tmp374,
 563 01ee 6B44     		add	r3, r3, sp	@ tmp374,
 564 01f0 0822     		movs	r2, #8	@ tmp375,
 565 01f2 1A70     		strb	r2, [r3]	@ tmp376, Mode
 566              	.L35:
 182:code/main.c   ****       }
 183:code/main.c   ****     }
 184:code/main.c   **** 
 185:code/main.c   **** //    if(read_nMode() == 0){ 
 186:code/main.c   **** //      if ( Mode > 0x06 ){
 187:code/main.c   **** //        Mode = 0x00;  // back to odometer
 188:code/main.c   **** //      }
 189:code/main.c   **** //     else {
 190:code/main.c   **** //       Mode = Mode + 1; // go to next Mode
 191:code/main.c   **** //      }
 192:code/main.c   **** //    }
 193:code/main.c   **** 
 194:code/main.c   ****     switch (Mode) {
 567              		.loc 1 194 0
 568 01f4 4F23     		movs	r3, #79	@ tmp377,
 569 01f6 6B44     		add	r3, r3, sp	@ tmp377,
 570 01f8 1B78     		ldrb	r3, [r3]	@ D.4613, Mode
 571 01fa 082B     		cmp	r3, #8	@ D.4613,
 572 01fc 00D9     		bls	.LCB400	@
 573 01fe 17E3     		b	.L37	@long jump	@
 574              	.LCB400:
 575 0200 9A00     		lsls	r2, r3, #2	@ tmp378, D.4613,
 576 0202 D94B     		ldr	r3, .L78	@ tmp380,
 577 0204 D318     		adds	r3, r2, r3	@ tmp379, tmp378, tmp380
 578 0206 1B68     		ldr	r3, [r3]	@ tmp381,
 579 0208 9F46     		mov	pc, r3	@ tmp381
 580              		.section	.rodata
 581              		.align	2
 582              	.L39:
 583 0000 0A020000 		.word	.L38
 584 0004 B4020000 		.word	.L40
 585 0008 6A030000 		.word	.L41
 586 000c 08040000 		.word	.L42
 587 0010 AE040000 		.word	.L43
 588 0014 6C050000 		.word	.L44
 589 0018 16060000 		.word	.L45
 590 001c C0060000 		.word	.L46
 591 0020 78070000 		.word	.L47
 592              		.text
 593              	.L38:
 195:code/main.c   ****       case 0x00: // odometer        range: 00.0 ~ 99.9 km
 196:code/main.c   ****               if (!read_nTrip()){
 594              		.loc 1 196 0
 595 020a FFF7FEFF 		bl	read_nTrip	@
 596 020e 031E     		subs	r3, r0, #0	@ D.4612,,
 597 0210 01D1     		bne	.L48	@,
 197:code/main.c   ****                 fork_counter = 0x00000000;
 598              		.loc 1 197 0
 599 0212 0023     		movs	r3, #0	@ tmp382,
 600 0214 1293     		str	r3, [sp, #72]	@ tmp382, fork_counter
 601              	.L48:
ARM GAS  /tmp/ccun4gHj.s 			page 15


 198:code/main.c   ****               }
 199:code/main.c   ****               if (!read_nMode()){
 602              		.loc 1 199 0
 603 0216 FFF7FEFF 		bl	read_nMode	@
 604 021a 031E     		subs	r3, r0, #0	@ D.4612,,
 605 021c 03D1     		bne	.L49	@,
 200:code/main.c   ****                 Mode = 0x01;
 606              		.loc 1 200 0
 607 021e 4F23     		movs	r3, #79	@ tmp383,
 608 0220 6B44     		add	r3, r3, sp	@ tmp383,
 609 0222 0122     		movs	r2, #1	@ tmp384,
 610 0224 1A70     		strb	r2, [r3]	@ tmp385, Mode
 611              	.L49:
 201:code/main.c   ****               } 
 202:code/main.c   **** 
 203:code/main.c   ****               DP = 0x02;
 612              		.loc 1 203 0
 613 0226 2323     		movs	r3, #35	@ tmp386,
 614 0228 6B44     		add	r3, r3, sp	@ tmp386,
 615 022a 0222     		movs	r2, #2	@ tmp387,
 616 022c 1A70     		strb	r2, [r3]	@ tmp388, DP
 204:code/main.c   ****               digits[3] = 0x00;
 617              		.loc 1 204 0
 618 022e 03AB     		add	r3, sp, #12	@ tmp389,,
 619 0230 0022     		movs	r2, #0	@ tmp390,
 620 0232 DA70     		strb	r2, [r3, #3]	@ tmp391, digits
 205:code/main.c   ****               digits[2] = (odometer%1000)/100;
 621              		.loc 1 205 0
 622 0234 119A     		ldr	r2, [sp, #68]	@ tmp392, odometer
 623 0236 FA23     		movs	r3, #250	@ tmp922,
 624 0238 9900     		lsls	r1, r3, #2	@, tmp922,
 625 023a 1000     		movs	r0, r2	@, tmp392
 626 023c FFF7FEFF 		bl	__aeabi_uidivmod	@
 627 0240 0B00     		movs	r3, r1	@ tmp397,
 628 0242 6421     		movs	r1, #100	@,
 629 0244 1800     		movs	r0, r3	@, D.4612
 630 0246 FFF7FEFF 		bl	__aeabi_uidiv	@
 631 024a 0300     		movs	r3, r0	@ tmp400,
 632 024c DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 633 024e 03AB     		add	r3, sp, #12	@ tmp401,,
 634 0250 9A70     		strb	r2, [r3, #2]	@ tmp402, digits
 206:code/main.c   ****               digits[1] = (odometer%100)/10; 
 635              		.loc 1 206 0
 636 0252 119B     		ldr	r3, [sp, #68]	@ tmp403, odometer
 637 0254 6421     		movs	r1, #100	@,
 638 0256 1800     		movs	r0, r3	@, tmp403
 639 0258 FFF7FEFF 		bl	__aeabi_uidivmod	@
 640 025c 0B00     		movs	r3, r1	@ tmp408,
 641 025e 0A21     		movs	r1, #10	@,
 642 0260 1800     		movs	r0, r3	@, D.4612
 643 0262 FFF7FEFF 		bl	__aeabi_uidiv	@
 644 0266 0300     		movs	r3, r0	@ tmp411,
 645 0268 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 646 026a 03AB     		add	r3, sp, #12	@ tmp412,,
 647 026c 5A70     		strb	r2, [r3, #1]	@ tmp413, digits
 207:code/main.c   ****               digits[0] = (odometer%100)%10;
 648              		.loc 1 207 0
ARM GAS  /tmp/ccun4gHj.s 			page 16


 649 026e 119B     		ldr	r3, [sp, #68]	@ tmp414, odometer
 650 0270 6421     		movs	r1, #100	@,
 651 0272 1800     		movs	r0, r3	@, tmp414
 652 0274 FFF7FEFF 		bl	__aeabi_uidivmod	@
 653 0278 0B00     		movs	r3, r1	@ tmp419,
 654 027a 0A21     		movs	r1, #10	@,
 655 027c 1800     		movs	r0, r3	@, D.4612
 656 027e FFF7FEFF 		bl	__aeabi_uidivmod	@
 657 0282 0B00     		movs	r3, r1	@ tmp424,
 658 0284 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 659 0286 03AB     		add	r3, sp, #12	@ tmp425,,
 660 0288 1A70     		strb	r2, [r3]	@ tmp426, digits
 208:code/main.c   **** 
 209:code/main.c   ****               write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 661              		.loc 1 209 0
 662 028a 03AB     		add	r3, sp, #12	@ tmp427,,
 663 028c D978     		ldrb	r1, [r3, #3]	@ D.4611,
 664 028e 03AB     		add	r3, sp, #12	@ tmp428,,
 665 0290 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 666 0292 03AB     		add	r3, sp, #12	@ tmp429,,
 667 0294 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 668 0296 03AB     		add	r3, sp, #12	@ tmp430,,
 669 0298 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 670 029a 2322     		movs	r2, #35	@ tmp431,
 671 029c 6A44     		add	r2, r2, sp	@ tmp431,
 672 029e 1078     		ldrb	r0, [r2]	@ tmp432, DP
 673 02a0 0093     		str	r3, [sp]	@ D.4611,
 674 02a2 2B00     		movs	r3, r5	@, D.4611
 675 02a4 2200     		movs	r2, r4	@, D.4611
 676 02a6 FFF7FEFF 		bl	connect_digits	@
 677 02aa 0300     		movs	r3, r0	@ D.4612,
 678 02ac 1800     		movs	r0, r3	@, D.4612
 679 02ae FFF7FEFF 		bl	write_led	@
 210:code/main.c   **** 
 211:code/main.c   ****         break;
 680              		.loc 1 211 0
 681 02b2 E2E2     		b	.L50	@
 682              	.L40:
 212:code/main.c   ****       case 0x01: // trip timer      time rage : 0.00 ~ 9.59 
 213:code/main.c   ****               if(!read_nTrip()){ 
 683              		.loc 1 213 0
 684 02b4 FFF7FEFF 		bl	read_nTrip	@
 685 02b8 031E     		subs	r3, r0, #0	@ D.4612,,
 686 02ba 01D1     		bne	.L51	@,
 214:code/main.c   ****                 accumulate_time = 0x00000000;
 687              		.loc 1 214 0
 688 02bc 0023     		movs	r3, #0	@ tmp433,
 689 02be 0F93     		str	r3, [sp, #60]	@ tmp433, accumulate_time
 690              	.L51:
 215:code/main.c   ****               }
 216:code/main.c   ****               if(!read_nMode()){
 691              		.loc 1 216 0
 692 02c0 FFF7FEFF 		bl	read_nMode	@
 693 02c4 031E     		subs	r3, r0, #0	@ D.4612,,
 694 02c6 03D1     		bne	.L52	@,
 217:code/main.c   ****                 Mode = 0x02;
 695              		.loc 1 217 0
ARM GAS  /tmp/ccun4gHj.s 			page 17


 696 02c8 4F23     		movs	r3, #79	@ tmp434,
 697 02ca 6B44     		add	r3, r3, sp	@ tmp434,
 698 02cc 0222     		movs	r2, #2	@ tmp435,
 699 02ce 1A70     		strb	r2, [r3]	@ tmp436, Mode
 700              	.L52:
 218:code/main.c   ****               }
 219:code/main.c   **** 
 220:code/main.c   ****               DP = 0x04;
 701              		.loc 1 220 0
 702 02d0 2323     		movs	r3, #35	@ tmp437,
 703 02d2 6B44     		add	r3, r3, sp	@ tmp437,
 704 02d4 0422     		movs	r2, #4	@ tmp438,
 705 02d6 1A70     		strb	r2, [r3]	@ tmp439, DP
 221:code/main.c   ****               minute = time/60;
 706              		.loc 1 221 0
 707 02d8 109B     		ldr	r3, [sp, #64]	@ tmp441, time
 708 02da 3C21     		movs	r1, #60	@,
 709 02dc 1800     		movs	r0, r3	@, tmp441
 710 02de FFF7FEFF 		bl	__aeabi_uidiv	@
 711 02e2 0300     		movs	r3, r0	@ tmp444,
 712 02e4 0493     		str	r3, [sp, #16]	@ tmp444, minute
 222:code/main.c   **** 	      digits[3] = 0x01;
 713              		.loc 1 222 0
 714 02e6 03AB     		add	r3, sp, #12	@ tmp445,,
 715 02e8 0122     		movs	r2, #1	@ tmp446,
 716 02ea DA70     		strb	r2, [r3, #3]	@ tmp447, digits
 223:code/main.c   ****               digits[2] = (minute/60)%10;
 717              		.loc 1 223 0
 718 02ec 049B     		ldr	r3, [sp, #16]	@ tmp448, minute
 719 02ee 3C21     		movs	r1, #60	@,
 720 02f0 1800     		movs	r0, r3	@, tmp448
 721 02f2 FFF7FEFF 		bl	__aeabi_uidiv	@
 722 02f6 0300     		movs	r3, r0	@ tmp451,
 723 02f8 0A21     		movs	r1, #10	@,
 724 02fa 1800     		movs	r0, r3	@, D.4612
 725 02fc FFF7FEFF 		bl	__aeabi_uidivmod	@
 726 0300 0B00     		movs	r3, r1	@ tmp456,
 727 0302 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 728 0304 03AB     		add	r3, sp, #12	@ tmp457,,
 729 0306 9A70     		strb	r2, [r3, #2]	@ tmp458, digits
 224:code/main.c   ****               digits[1] = (minute%60)/10;
 730              		.loc 1 224 0
 731 0308 049B     		ldr	r3, [sp, #16]	@ tmp459, minute
 732 030a 3C21     		movs	r1, #60	@,
 733 030c 1800     		movs	r0, r3	@, tmp459
 734 030e FFF7FEFF 		bl	__aeabi_uidivmod	@
 735 0312 0B00     		movs	r3, r1	@ tmp464,
 736 0314 0A21     		movs	r1, #10	@,
 737 0316 1800     		movs	r0, r3	@, D.4612
 738 0318 FFF7FEFF 		bl	__aeabi_uidiv	@
 739 031c 0300     		movs	r3, r0	@ tmp467,
 740 031e DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 741 0320 03AB     		add	r3, sp, #12	@ tmp468,,
 742 0322 5A70     		strb	r2, [r3, #1]	@ tmp469, digits
 225:code/main.c   **** 	      digits[0] = (minute%60)%10;
 743              		.loc 1 225 0
 744 0324 049B     		ldr	r3, [sp, #16]	@ tmp470, minute
ARM GAS  /tmp/ccun4gHj.s 			page 18


 745 0326 3C21     		movs	r1, #60	@,
 746 0328 1800     		movs	r0, r3	@, tmp470
 747 032a FFF7FEFF 		bl	__aeabi_uidivmod	@
 748 032e 0B00     		movs	r3, r1	@ tmp475,
 749 0330 0A21     		movs	r1, #10	@,
 750 0332 1800     		movs	r0, r3	@, D.4612
 751 0334 FFF7FEFF 		bl	__aeabi_uidivmod	@
 752 0338 0B00     		movs	r3, r1	@ tmp480,
 753 033a DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 754 033c 03AB     		add	r3, sp, #12	@ tmp481,,
 755 033e 1A70     		strb	r2, [r3]	@ tmp482, digits
 226:code/main.c   **** 
 227:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 756              		.loc 1 227 0
 757 0340 03AB     		add	r3, sp, #12	@ tmp483,,
 758 0342 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 759 0344 03AB     		add	r3, sp, #12	@ tmp484,,
 760 0346 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 761 0348 03AB     		add	r3, sp, #12	@ tmp485,,
 762 034a 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 763 034c 03AB     		add	r3, sp, #12	@ tmp486,,
 764 034e 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 765 0350 2322     		movs	r2, #35	@ tmp487,
 766 0352 6A44     		add	r2, r2, sp	@ tmp487,
 767 0354 1078     		ldrb	r0, [r2]	@ tmp488, DP
 768 0356 0093     		str	r3, [sp]	@ D.4611,
 769 0358 2B00     		movs	r3, r5	@, D.4611
 770 035a 2200     		movs	r2, r4	@, D.4611
 771 035c FFF7FEFF 		bl	connect_digits	@
 772 0360 0300     		movs	r3, r0	@ D.4612,
 773 0362 1800     		movs	r0, r3	@, D.4612
 774 0364 FFF7FEFF 		bl	write_led	@
 228:code/main.c   **** 
 229:code/main.c   ****         break;
 775              		.loc 1 229 0
 776 0368 87E2     		b	.L50	@
 777              	.L41:
 230:code/main.c   ****       case 0x02: // speedometer      range:  00.0 ~ 99.9 km/h
 231:code/main.c   ****               if(!read_nMode()){
 778              		.loc 1 231 0
 779 036a FFF7FEFF 		bl	read_nMode	@
 780 036e 031E     		subs	r3, r0, #0	@ D.4612,,
 781 0370 03D1     		bne	.L53	@,
 232:code/main.c   ****                 Mode = 0x03;
 782              		.loc 1 232 0
 783 0372 4F23     		movs	r3, #79	@ tmp489,
 784 0374 6B44     		add	r3, r3, sp	@ tmp489,
 785 0376 0322     		movs	r2, #3	@ tmp490,
 786 0378 1A70     		strb	r2, [r3]	@ tmp491, Mode
 787              	.L53:
 233:code/main.c   ****               }
 234:code/main.c   ****               
 235:code/main.c   ****               DP = 0x02;
 788              		.loc 1 235 0
 789 037a 2323     		movs	r3, #35	@ tmp492,
 790 037c 6B44     		add	r3, r3, sp	@ tmp492,
 791 037e 0222     		movs	r2, #2	@ tmp493,
ARM GAS  /tmp/ccun4gHj.s 			page 19


 792 0380 1A70     		strb	r2, [r3]	@ tmp494, DP
 236:code/main.c   ****               digits[3] = 0x02;
 793              		.loc 1 236 0
 794 0382 03AB     		add	r3, sp, #12	@ tmp495,,
 795 0384 0222     		movs	r2, #2	@ tmp496,
 796 0386 DA70     		strb	r2, [r3, #3]	@ tmp497, digits
 237:code/main.c   ****               digits[2] = (speedometer%1000)/100;  
 797              		.loc 1 237 0
 798 0388 0C9A     		ldr	r2, [sp, #48]	@ tmp498, speedometer
 799 038a FA23     		movs	r3, #250	@ tmp921,
 800 038c 9900     		lsls	r1, r3, #2	@, tmp921,
 801 038e 1000     		movs	r0, r2	@, tmp498
 802 0390 FFF7FEFF 		bl	__aeabi_uidivmod	@
 803 0394 0B00     		movs	r3, r1	@ tmp503,
 804 0396 6421     		movs	r1, #100	@,
 805 0398 1800     		movs	r0, r3	@, D.4612
 806 039a FFF7FEFF 		bl	__aeabi_uidiv	@
 807 039e 0300     		movs	r3, r0	@ tmp506,
 808 03a0 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 809 03a2 03AB     		add	r3, sp, #12	@ tmp507,,
 810 03a4 9A70     		strb	r2, [r3, #2]	@ tmp508, digits
 238:code/main.c   ****               digits[1] = (speedometer%100)/10; 
 811              		.loc 1 238 0
 812 03a6 0C9B     		ldr	r3, [sp, #48]	@ tmp509, speedometer
 813 03a8 6421     		movs	r1, #100	@,
 814 03aa 1800     		movs	r0, r3	@, tmp509
 815 03ac FFF7FEFF 		bl	__aeabi_uidivmod	@
 816 03b0 0B00     		movs	r3, r1	@ tmp514,
 817 03b2 0A21     		movs	r1, #10	@,
 818 03b4 1800     		movs	r0, r3	@, D.4612
 819 03b6 FFF7FEFF 		bl	__aeabi_uidiv	@
 820 03ba 0300     		movs	r3, r0	@ tmp517,
 821 03bc DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 822 03be 03AB     		add	r3, sp, #12	@ tmp518,,
 823 03c0 5A70     		strb	r2, [r3, #1]	@ tmp519, digits
 239:code/main.c   ****               digits[0] = (speedometer%100)%10;
 824              		.loc 1 239 0
 825 03c2 0C9B     		ldr	r3, [sp, #48]	@ tmp520, speedometer
 826 03c4 6421     		movs	r1, #100	@,
 827 03c6 1800     		movs	r0, r3	@, tmp520
 828 03c8 FFF7FEFF 		bl	__aeabi_uidivmod	@
 829 03cc 0B00     		movs	r3, r1	@ tmp525,
 830 03ce 0A21     		movs	r1, #10	@,
 831 03d0 1800     		movs	r0, r3	@, D.4612
 832 03d2 FFF7FEFF 		bl	__aeabi_uidivmod	@
 833 03d6 0B00     		movs	r3, r1	@ tmp530,
 834 03d8 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 835 03da 03AB     		add	r3, sp, #12	@ tmp531,,
 836 03dc 1A70     		strb	r2, [r3]	@ tmp532, digits
 240:code/main.c   ****               
 241:code/main.c   ****               write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 837              		.loc 1 241 0
 838 03de 03AB     		add	r3, sp, #12	@ tmp533,,
 839 03e0 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 840 03e2 03AB     		add	r3, sp, #12	@ tmp534,,
 841 03e4 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 842 03e6 03AB     		add	r3, sp, #12	@ tmp535,,
ARM GAS  /tmp/ccun4gHj.s 			page 20


 843 03e8 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 844 03ea 03AB     		add	r3, sp, #12	@ tmp536,,
 845 03ec 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 846 03ee 2322     		movs	r2, #35	@ tmp537,
 847 03f0 6A44     		add	r2, r2, sp	@ tmp537,
 848 03f2 1078     		ldrb	r0, [r2]	@ tmp538, DP
 849 03f4 0093     		str	r3, [sp]	@ D.4611,
 850 03f6 2B00     		movs	r3, r5	@, D.4611
 851 03f8 2200     		movs	r2, r4	@, D.4611
 852 03fa FFF7FEFF 		bl	connect_digits	@
 853 03fe 0300     		movs	r3, r0	@ D.4612,
 854 0400 1800     		movs	r0, r3	@, D.4612
 855 0402 FFF7FEFF 		bl	write_led	@
 242:code/main.c   **** 
 243:code/main.c   ****         break;
 856              		.loc 1 243 0
 857 0406 38E2     		b	.L50	@
 858              	.L42:
 244:code/main.c   ****       case 0x03: // cadence meter
 245:code/main.c   ****               if(!read_nMode()){
 859              		.loc 1 245 0
 860 0408 FFF7FEFF 		bl	read_nMode	@
 861 040c 031E     		subs	r3, r0, #0	@ D.4612,,
 862 040e 07D1     		bne	.L54	@,
 246:code/main.c   ****                 Mode = 0x04;
 863              		.loc 1 246 0
 864 0410 4F23     		movs	r3, #79	@ tmp539,
 865 0412 6B44     		add	r3, r3, sp	@ tmp539,
 866 0414 0422     		movs	r2, #4	@ tmp540,
 867 0416 1A70     		strb	r2, [r3]	@ tmp541, Mode
 247:code/main.c   ****                 display = true;
 868              		.loc 1 247 0
 869 0418 1F23     		movs	r3, #31	@ tmp542,
 870 041a 6B44     		add	r3, r3, sp	@ tmp542,
 871 041c 0122     		movs	r2, #1	@ tmp543,
 872 041e 1A70     		strb	r2, [r3]	@ tmp544, display
 873              	.L54:
 248:code/main.c   ****               }
 249:code/main.c   **** 
 250:code/main.c   ****               DP = 0x01;
 874              		.loc 1 250 0
 875 0420 2323     		movs	r3, #35	@ tmp545,
 876 0422 6B44     		add	r3, r3, sp	@ tmp545,
 877 0424 0122     		movs	r2, #1	@ tmp546,
 878 0426 1A70     		strb	r2, [r3]	@ tmp547, DP
 251:code/main.c   ****               digits[3] = 0x03;
 879              		.loc 1 251 0
 880 0428 03AB     		add	r3, sp, #12	@ tmp548,,
 881 042a 0322     		movs	r2, #3	@ tmp549,
 882 042c DA70     		strb	r2, [r3, #3]	@ tmp550, digits
 252:code/main.c   ****               digits[2] = (cadence_meter%1000)/100; 
 883              		.loc 1 252 0
 884 042e 0A9A     		ldr	r2, [sp, #40]	@ tmp551, cadence_meter
 885 0430 FA23     		movs	r3, #250	@ tmp920,
 886 0432 9900     		lsls	r1, r3, #2	@, tmp920,
 887 0434 1000     		movs	r0, r2	@, tmp551
 888 0436 FFF7FEFF 		bl	__aeabi_uidivmod	@
ARM GAS  /tmp/ccun4gHj.s 			page 21


 889 043a 0B00     		movs	r3, r1	@ tmp556,
 890 043c 6421     		movs	r1, #100	@,
 891 043e 1800     		movs	r0, r3	@, D.4612
 892 0440 FFF7FEFF 		bl	__aeabi_uidiv	@
 893 0444 0300     		movs	r3, r0	@ tmp559,
 894 0446 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 895 0448 03AB     		add	r3, sp, #12	@ tmp560,,
 896 044a 9A70     		strb	r2, [r3, #2]	@ tmp561, digits
 253:code/main.c   ****               digits[1] = (cadence_meter%100)/10; 
 897              		.loc 1 253 0
 898 044c 0A9B     		ldr	r3, [sp, #40]	@ tmp562, cadence_meter
 899 044e 6421     		movs	r1, #100	@,
 900 0450 1800     		movs	r0, r3	@, tmp562
 901 0452 FFF7FEFF 		bl	__aeabi_uidivmod	@
 902 0456 0B00     		movs	r3, r1	@ tmp567,
 903 0458 0A21     		movs	r1, #10	@,
 904 045a 1800     		movs	r0, r3	@, D.4612
 905 045c FFF7FEFF 		bl	__aeabi_uidiv	@
 906 0460 0300     		movs	r3, r0	@ tmp570,
 907 0462 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 908 0464 03AB     		add	r3, sp, #12	@ tmp571,,
 909 0466 5A70     		strb	r2, [r3, #1]	@ tmp572, digits
 254:code/main.c   ****               digits[0] = (cadence_meter%100)%10; 
 910              		.loc 1 254 0
 911 0468 0A9B     		ldr	r3, [sp, #40]	@ tmp573, cadence_meter
 912 046a 6421     		movs	r1, #100	@,
 913 046c 1800     		movs	r0, r3	@, tmp573
 914 046e FFF7FEFF 		bl	__aeabi_uidivmod	@
 915 0472 0B00     		movs	r3, r1	@ tmp578,
 916 0474 0A21     		movs	r1, #10	@,
 917 0476 1800     		movs	r0, r3	@, D.4612
 918 0478 FFF7FEFF 		bl	__aeabi_uidivmod	@
 919 047c 0B00     		movs	r3, r1	@ tmp583,
 920 047e DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 921 0480 03AB     		add	r3, sp, #12	@ tmp584,,
 922 0482 1A70     		strb	r2, [r3]	@ tmp585, digits
 255:code/main.c   **** 
 256:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 923              		.loc 1 256 0
 924 0484 03AB     		add	r3, sp, #12	@ tmp586,,
 925 0486 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 926 0488 03AB     		add	r3, sp, #12	@ tmp587,,
 927 048a 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 928 048c 03AB     		add	r3, sp, #12	@ tmp588,,
 929 048e 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 930 0490 03AB     		add	r3, sp, #12	@ tmp589,,
 931 0492 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 932 0494 2322     		movs	r2, #35	@ tmp590,
 933 0496 6A44     		add	r2, r2, sp	@ tmp590,
 934 0498 1078     		ldrb	r0, [r2]	@ tmp591, DP
 935 049a 0093     		str	r3, [sp]	@ D.4611,
 936 049c 2B00     		movs	r3, r5	@, D.4611
 937 049e 2200     		movs	r2, r4	@, D.4611
 938 04a0 FFF7FEFF 		bl	connect_digits	@
 939 04a4 0300     		movs	r3, r0	@ D.4612,
 940 04a6 1800     		movs	r0, r3	@, D.4612
 941 04a8 FFF7FEFF 		bl	write_led	@
ARM GAS  /tmp/ccun4gHj.s 			page 22


 257:code/main.c   ****         break;
 942              		.loc 1 257 0
 943 04ac E5E1     		b	.L50	@
 944              	.L43:
 258:code/main.c   ****       case 0x04: // average speed
 259:code/main.c   **** 	      if(read_nTrip() == 0){
 945              		.loc 1 259 0
 946 04ae FFF7FEFF 		bl	read_nTrip	@
 947 04b2 031E     		subs	r3, r0, #0	@ D.4612,,
 948 04b4 03D1     		bne	.L55	@,
 260:code/main.c   **** 		fork_counter = 0x00000000;
 949              		.loc 1 260 0
 950 04b6 0023     		movs	r3, #0	@ tmp592,
 951 04b8 1293     		str	r3, [sp, #72]	@ tmp592, fork_counter
 261:code/main.c   ****                 time = 0x00000000;
 952              		.loc 1 261 0
 953 04ba 0023     		movs	r3, #0	@ tmp593,
 954 04bc 1093     		str	r3, [sp, #64]	@ tmp593, time
 955              	.L55:
 262:code/main.c   ****               }
 263:code/main.c   ****               if(!read_nMode()){
 956              		.loc 1 263 0
 957 04be FFF7FEFF 		bl	read_nMode	@
 958 04c2 031E     		subs	r3, r0, #0	@ D.4612,,
 959 04c4 03D1     		bne	.L56	@,
 264:code/main.c   ****                 Mode = 0x05;
 960              		.loc 1 264 0
 961 04c6 4F23     		movs	r3, #79	@ tmp594,
 962 04c8 6B44     		add	r3, r3, sp	@ tmp594,
 963 04ca 0522     		movs	r2, #5	@ tmp595,
 964 04cc 1A70     		strb	r2, [r3]	@ tmp596, Mode
 965              	.L56:
 265:code/main.c   ****               }
 266:code/main.c   **** 
 267:code/main.c   ****               if (display){
 966              		.loc 1 267 0
 967 04ce 1F23     		movs	r3, #31	@ tmp597,
 968 04d0 6B44     		add	r3, r3, sp	@ tmp597,
 969 04d2 1B78     		ldrb	r3, [r3]	@ tmp598, display
 970 04d4 002B     		cmp	r3, #0	@ tmp598,
 971 04d6 31D0     		beq	.L57	@,
 268:code/main.c   ****                 DP = 0x02;
 972              		.loc 1 268 0
 973 04d8 2323     		movs	r3, #35	@ tmp599,
 974 04da 6B44     		add	r3, r3, sp	@ tmp599,
 975 04dc 0222     		movs	r2, #2	@ tmp600,
 976 04de 1A70     		strb	r2, [r3]	@ tmp601, DP
 269:code/main.c   ****                 digits[3] = 0x04;
 977              		.loc 1 269 0
 978 04e0 03AB     		add	r3, sp, #12	@ tmp602,,
 979 04e2 0422     		movs	r2, #4	@ tmp603,
 980 04e4 DA70     		strb	r2, [r3, #3]	@ tmp604, digits
 270:code/main.c   ****                 digits[2] = (av_ssni_419%1000)/100;
 981              		.loc 1 270 0
 982 04e6 0E9A     		ldr	r2, [sp, #56]	@ tmp605, av_ssni_419
 983 04e8 FA23     		movs	r3, #250	@ tmp919,
 984 04ea 9900     		lsls	r1, r3, #2	@, tmp919,
ARM GAS  /tmp/ccun4gHj.s 			page 23


 985 04ec 1000     		movs	r0, r2	@, tmp605
 986 04ee FFF7FEFF 		bl	__aeabi_uidivmod	@
 987 04f2 0B00     		movs	r3, r1	@ tmp610,
 988 04f4 6421     		movs	r1, #100	@,
 989 04f6 1800     		movs	r0, r3	@, D.4612
 990 04f8 FFF7FEFF 		bl	__aeabi_uidiv	@
 991 04fc 0300     		movs	r3, r0	@ tmp613,
 992 04fe DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 993 0500 03AB     		add	r3, sp, #12	@ tmp614,,
 994 0502 9A70     		strb	r2, [r3, #2]	@ tmp615, digits
 271:code/main.c   ****                 digits[1] = (av_ssni_419%100)/10; 
 995              		.loc 1 271 0
 996 0504 0E9B     		ldr	r3, [sp, #56]	@ tmp616, av_ssni_419
 997 0506 6421     		movs	r1, #100	@,
 998 0508 1800     		movs	r0, r3	@, tmp616
 999 050a FFF7FEFF 		bl	__aeabi_uidivmod	@
 1000 050e 0B00     		movs	r3, r1	@ tmp621,
 1001 0510 0A21     		movs	r1, #10	@,
 1002 0512 1800     		movs	r0, r3	@, D.4612
 1003 0514 FFF7FEFF 		bl	__aeabi_uidiv	@
 1004 0518 0300     		movs	r3, r0	@ tmp624,
 1005 051a DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1006 051c 03AB     		add	r3, sp, #12	@ tmp625,,
 1007 051e 5A70     		strb	r2, [r3, #1]	@ tmp626, digits
 272:code/main.c   ****                 digits[0] = (av_ssni_419%100)%10;
 1008              		.loc 1 272 0
 1009 0520 0E9B     		ldr	r3, [sp, #56]	@ tmp627, av_ssni_419
 1010 0522 6421     		movs	r1, #100	@,
 1011 0524 1800     		movs	r0, r3	@, tmp627
 1012 0526 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1013 052a 0B00     		movs	r3, r1	@ tmp632,
 1014 052c 0A21     		movs	r1, #10	@,
 1015 052e 1800     		movs	r0, r3	@, D.4612
 1016 0530 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1017 0534 0B00     		movs	r3, r1	@ tmp637,
 1018 0536 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1019 0538 03AB     		add	r3, sp, #12	@ tmp638,,
 1020 053a 1A70     		strb	r2, [r3]	@ tmp639, digits
 1021              	.L57:
 273:code/main.c   ****               }
 274:code/main.c   **** 
 275:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 1022              		.loc 1 275 0
 1023 053c 03AB     		add	r3, sp, #12	@ tmp640,,
 1024 053e D978     		ldrb	r1, [r3, #3]	@ D.4611,
 1025 0540 03AB     		add	r3, sp, #12	@ tmp641,,
 1026 0542 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 1027 0544 03AB     		add	r3, sp, #12	@ tmp642,,
 1028 0546 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 1029 0548 03AB     		add	r3, sp, #12	@ tmp643,,
 1030 054a 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 1031 054c 2322     		movs	r2, #35	@ tmp644,
 1032 054e 6A44     		add	r2, r2, sp	@ tmp644,
 1033 0550 1078     		ldrb	r0, [r2]	@ tmp645, DP
 1034 0552 0093     		str	r3, [sp]	@ D.4611,
 1035 0554 2B00     		movs	r3, r5	@, D.4611
 1036 0556 2200     		movs	r2, r4	@, D.4611
ARM GAS  /tmp/ccun4gHj.s 			page 24


 1037 0558 FFF7FEFF 		bl	connect_digits	@
 1038 055c 0300     		movs	r3, r0	@ D.4612,
 1039 055e 1800     		movs	r0, r3	@, D.4612
 1040 0560 FFF7FEFF 		bl	write_led	@
 276:code/main.c   ****         break;
 1041              		.loc 1 276 0
 1042 0564 89E1     		b	.L50	@
 1043              	.L79:
 1044 0566 C046     		.align	2
 1045              	.L78:
 1046 0568 00000000 		.word	.L39
 1047              	.L44:
 277:code/main.c   ****       case 0x05: // max speed
 278:code/main.c   ****               if(read_nTrip() == 0){
 1048              		.loc 1 278 0
 1049 056c FFF7FEFF 		bl	read_nTrip	@
 1050 0570 031E     		subs	r3, r0, #0	@ D.4612,,
 1051 0572 01D1     		bne	.L58	@,
 279:code/main.c   **** 		max_speed = 0x00000000;
 1052              		.loc 1 279 0
 1053 0574 0023     		movs	r3, #0	@ tmp646,
 1054 0576 0D93     		str	r3, [sp, #52]	@ tmp646, max_speed
 1055              	.L58:
 280:code/main.c   ****               }
 281:code/main.c   ****               if(!read_nMode()){
 1056              		.loc 1 281 0
 1057 0578 FFF7FEFF 		bl	read_nMode	@
 1058 057c 031E     		subs	r3, r0, #0	@ D.4612,,
 1059 057e 03D1     		bne	.L59	@,
 282:code/main.c   ****                 Mode = 0x06;
 1060              		.loc 1 282 0
 1061 0580 4F23     		movs	r3, #79	@ tmp647,
 1062 0582 6B44     		add	r3, r3, sp	@ tmp647,
 1063 0584 0622     		movs	r2, #6	@ tmp648,
 1064 0586 1A70     		strb	r2, [r3]	@ tmp649, Mode
 1065              	.L59:
 283:code/main.c   ****               }
 284:code/main.c   **** 
 285:code/main.c   ****               DP = 0x02;
 1066              		.loc 1 285 0
 1067 0588 2323     		movs	r3, #35	@ tmp650,
 1068 058a 6B44     		add	r3, r3, sp	@ tmp650,
 1069 058c 0222     		movs	r2, #2	@ tmp651,
 1070 058e 1A70     		strb	r2, [r3]	@ tmp652, DP
 286:code/main.c   **** 	      digits[3] = 0x05;
 1071              		.loc 1 286 0
 1072 0590 03AB     		add	r3, sp, #12	@ tmp653,,
 1073 0592 0522     		movs	r2, #5	@ tmp654,
 1074 0594 DA70     		strb	r2, [r3, #3]	@ tmp655, digits
 287:code/main.c   ****               digits[2] = (max_speed%1000)/100;
 1075              		.loc 1 287 0
 1076 0596 0D9A     		ldr	r2, [sp, #52]	@ tmp656, max_speed
 1077 0598 FA23     		movs	r3, #250	@ tmp918,
 1078 059a 9900     		lsls	r1, r3, #2	@, tmp918,
 1079 059c 1000     		movs	r0, r2	@, tmp656
 1080 059e FFF7FEFF 		bl	__aeabi_uidivmod	@
 1081 05a2 0B00     		movs	r3, r1	@ tmp661,
ARM GAS  /tmp/ccun4gHj.s 			page 25


 1082 05a4 6421     		movs	r1, #100	@,
 1083 05a6 1800     		movs	r0, r3	@, D.4612
 1084 05a8 FFF7FEFF 		bl	__aeabi_uidiv	@
 1085 05ac 0300     		movs	r3, r0	@ tmp664,
 1086 05ae DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1087 05b0 03AB     		add	r3, sp, #12	@ tmp665,,
 1088 05b2 9A70     		strb	r2, [r3, #2]	@ tmp666, digits
 288:code/main.c   ****               digits[1] = (max_speed%100)/10; 
 1089              		.loc 1 288 0
 1090 05b4 0D9B     		ldr	r3, [sp, #52]	@ tmp667, max_speed
 1091 05b6 6421     		movs	r1, #100	@,
 1092 05b8 1800     		movs	r0, r3	@, tmp667
 1093 05ba FFF7FEFF 		bl	__aeabi_uidivmod	@
 1094 05be 0B00     		movs	r3, r1	@ tmp672,
 1095 05c0 0A21     		movs	r1, #10	@,
 1096 05c2 1800     		movs	r0, r3	@, D.4612
 1097 05c4 FFF7FEFF 		bl	__aeabi_uidiv	@
 1098 05c8 0300     		movs	r3, r0	@ tmp675,
 1099 05ca DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1100 05cc 03AB     		add	r3, sp, #12	@ tmp676,,
 1101 05ce 5A70     		strb	r2, [r3, #1]	@ tmp677, digits
 289:code/main.c   ****               digits[0] = (max_speed%100)%10;
 1102              		.loc 1 289 0
 1103 05d0 0D9B     		ldr	r3, [sp, #52]	@ tmp678, max_speed
 1104 05d2 6421     		movs	r1, #100	@,
 1105 05d4 1800     		movs	r0, r3	@, tmp678
 1106 05d6 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1107 05da 0B00     		movs	r3, r1	@ tmp683,
 1108 05dc 0A21     		movs	r1, #10	@,
 1109 05de 1800     		movs	r0, r3	@, D.4612
 1110 05e0 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1111 05e4 0B00     		movs	r3, r1	@ tmp688,
 1112 05e6 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1113 05e8 03AB     		add	r3, sp, #12	@ tmp689,,
 1114 05ea 1A70     		strb	r2, [r3]	@ tmp690, digits
 290:code/main.c   **** 	
 291:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 1115              		.loc 1 291 0
 1116 05ec 03AB     		add	r3, sp, #12	@ tmp691,,
 1117 05ee D978     		ldrb	r1, [r3, #3]	@ D.4611,
 1118 05f0 03AB     		add	r3, sp, #12	@ tmp692,,
 1119 05f2 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 1120 05f4 03AB     		add	r3, sp, #12	@ tmp693,,
 1121 05f6 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 1122 05f8 03AB     		add	r3, sp, #12	@ tmp694,,
 1123 05fa 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 1124 05fc 2322     		movs	r2, #35	@ tmp695,
 1125 05fe 6A44     		add	r2, r2, sp	@ tmp695,
 1126 0600 1078     		ldrb	r0, [r2]	@ tmp696, DP
 1127 0602 0093     		str	r3, [sp]	@ D.4611,
 1128 0604 2B00     		movs	r3, r5	@, D.4611
 1129 0606 2200     		movs	r2, r4	@, D.4611
 1130 0608 FFF7FEFF 		bl	connect_digits	@
 1131 060c 0300     		movs	r3, r0	@ D.4612,
 1132 060e 1800     		movs	r0, r3	@, D.4612
 1133 0610 FFF7FEFF 		bl	write_led	@
 292:code/main.c   ****         break;
ARM GAS  /tmp/ccun4gHj.s 			page 26


 1134              		.loc 1 292 0
 1135 0614 31E1     		b	.L50	@
 1136              	.L45:
 293:code/main.c   ****       case 0x06: // calorie cost
 294:code/main.c   ****               if(read_nTrip() == 0){
 1137              		.loc 1 294 0
 1138 0616 FFF7FEFF 		bl	read_nTrip	@
 1139 061a 031E     		subs	r3, r0, #0	@ D.4612,,
 1140 061c 01D1     		bne	.L60	@,
 295:code/main.c   ****                 calorie = 0x00000000;
 1141              		.loc 1 295 0
 1142 061e 0023     		movs	r3, #0	@ tmp697,
 1143 0620 0993     		str	r3, [sp, #36]	@ tmp697, calorie
 1144              	.L60:
 296:code/main.c   ****               }
 297:code/main.c   ****               if(!read_nMode()){
 1145              		.loc 1 297 0
 1146 0622 FFF7FEFF 		bl	read_nMode	@
 1147 0626 031E     		subs	r3, r0, #0	@ D.4612,,
 1148 0628 03D1     		bne	.L61	@,
 298:code/main.c   ****                 Mode = 0x00;
 1149              		.loc 1 298 0
 1150 062a 4F23     		movs	r3, #79	@ tmp698,
 1151 062c 6B44     		add	r3, r3, sp	@ tmp698,
 1152 062e 0022     		movs	r2, #0	@ tmp699,
 1153 0630 1A70     		strb	r2, [r3]	@ tmp700, Mode
 1154              	.L61:
 299:code/main.c   ****               }
 300:code/main.c   **** 
 301:code/main.c   ****               DP = 0x01;
 1155              		.loc 1 301 0
 1156 0632 2323     		movs	r3, #35	@ tmp701,
 1157 0634 6B44     		add	r3, r3, sp	@ tmp701,
 1158 0636 0122     		movs	r2, #1	@ tmp702,
 1159 0638 1A70     		strb	r2, [r3]	@ tmp703, DP
 302:code/main.c   **** 	      digits[3] = 0x06;
 1160              		.loc 1 302 0
 1161 063a 03AB     		add	r3, sp, #12	@ tmp704,,
 1162 063c 0622     		movs	r2, #6	@ tmp705,
 1163 063e DA70     		strb	r2, [r3, #3]	@ tmp706, digits
 303:code/main.c   ****               digits[2] = (calorie%1000)/100;
 1164              		.loc 1 303 0
 1165 0640 099A     		ldr	r2, [sp, #36]	@ tmp707, calorie
 1166 0642 FA23     		movs	r3, #250	@ tmp917,
 1167 0644 9900     		lsls	r1, r3, #2	@, tmp917,
 1168 0646 1000     		movs	r0, r2	@, tmp707
 1169 0648 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1170 064c 0B00     		movs	r3, r1	@ tmp712,
 1171 064e 6421     		movs	r1, #100	@,
 1172 0650 1800     		movs	r0, r3	@, D.4612
 1173 0652 FFF7FEFF 		bl	__aeabi_uidiv	@
 1174 0656 0300     		movs	r3, r0	@ tmp715,
 1175 0658 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1176 065a 03AB     		add	r3, sp, #12	@ tmp716,,
 1177 065c 9A70     		strb	r2, [r3, #2]	@ tmp717, digits
 304:code/main.c   ****               digits[1] = (calorie%100)/10; 
 1178              		.loc 1 304 0
ARM GAS  /tmp/ccun4gHj.s 			page 27


 1179 065e 099B     		ldr	r3, [sp, #36]	@ tmp718, calorie
 1180 0660 6421     		movs	r1, #100	@,
 1181 0662 1800     		movs	r0, r3	@, tmp718
 1182 0664 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1183 0668 0B00     		movs	r3, r1	@ tmp723,
 1184 066a 0A21     		movs	r1, #10	@,
 1185 066c 1800     		movs	r0, r3	@, D.4612
 1186 066e FFF7FEFF 		bl	__aeabi_uidiv	@
 1187 0672 0300     		movs	r3, r0	@ tmp726,
 1188 0674 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1189 0676 03AB     		add	r3, sp, #12	@ tmp727,,
 1190 0678 5A70     		strb	r2, [r3, #1]	@ tmp728, digits
 305:code/main.c   ****               digits[0] = (calorie%100)%10;
 1191              		.loc 1 305 0
 1192 067a 099B     		ldr	r3, [sp, #36]	@ tmp729, calorie
 1193 067c 6421     		movs	r1, #100	@,
 1194 067e 1800     		movs	r0, r3	@, tmp729
 1195 0680 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1196 0684 0B00     		movs	r3, r1	@ tmp734,
 1197 0686 0A21     		movs	r1, #10	@,
 1198 0688 1800     		movs	r0, r3	@, D.4612
 1199 068a FFF7FEFF 		bl	__aeabi_uidivmod	@
 1200 068e 0B00     		movs	r3, r1	@ tmp739,
 1201 0690 DAB2     		uxtb	r2, r3	@ D.4611, D.4612
 1202 0692 03AB     		add	r3, sp, #12	@ tmp740,,
 1203 0694 1A70     		strb	r2, [r3]	@ tmp741, digits
 306:code/main.c   **** 
 307:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 1204              		.loc 1 307 0
 1205 0696 03AB     		add	r3, sp, #12	@ tmp742,,
 1206 0698 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 1207 069a 03AB     		add	r3, sp, #12	@ tmp743,,
 1208 069c 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 1209 069e 03AB     		add	r3, sp, #12	@ tmp744,,
 1210 06a0 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 1211 06a2 03AB     		add	r3, sp, #12	@ tmp745,,
 1212 06a4 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 1213 06a6 2322     		movs	r2, #35	@ tmp746,
 1214 06a8 6A44     		add	r2, r2, sp	@ tmp746,
 1215 06aa 1078     		ldrb	r0, [r2]	@ tmp747, DP
 1216 06ac 0093     		str	r3, [sp]	@ D.4611,
 1217 06ae 2B00     		movs	r3, r5	@, D.4611
 1218 06b0 2200     		movs	r2, r4	@, D.4611
 1219 06b2 FFF7FEFF 		bl	connect_digits	@
 1220 06b6 0300     		movs	r3, r0	@ D.4612,
 1221 06b8 1800     		movs	r0, r3	@, D.4612
 1222 06ba FFF7FEFF 		bl	write_led	@
 308:code/main.c   ****         break;
 1223              		.loc 1 308 0
 1224 06be DCE0     		b	.L50	@
 1225              	.L46:
 309:code/main.c   ****       case 0x07: // set wheel size   (unit: cm)
 310:code/main.c   **** 	      if ( read_nMode() == 0 ) {
 1226              		.loc 1 310 0
 1227 06c0 FFF7FEFF 		bl	read_nMode	@
 1228 06c4 031E     		subs	r3, r0, #0	@ D.4612,,
 1229 06c6 21D1     		bne	.L62	@,
ARM GAS  /tmp/ccun4gHj.s 			page 28


 311:code/main.c   ****                 if (digit_index!=0x00) {
 1230              		.loc 1 311 0
 1231 06c8 2223     		movs	r3, #34	@ tmp748,
 1232 06ca 6B44     		add	r3, r3, sp	@ tmp748,
 1233 06cc 1B78     		ldrb	r3, [r3]	@ tmp749, digit_index
 1234 06ce 002B     		cmp	r3, #0	@ tmp749,
 1235 06d0 07D0     		beq	.L63	@,
 312:code/main.c   ****                   digit_index--;
 1236              		.loc 1 312 0
 1237 06d2 2223     		movs	r3, #34	@ tmp750,
 1238 06d4 6B44     		add	r3, r3, sp	@ tmp750,
 1239 06d6 1A78     		ldrb	r2, [r3]	@ D.4611, digit_index
 1240 06d8 2223     		movs	r3, #34	@ tmp751,
 1241 06da 6B44     		add	r3, r3, sp	@ tmp751,
 1242 06dc 013A     		subs	r2, r2, #1	@ tmp752,
 1243 06de 1A70     		strb	r2, [r3]	@ tmp753, digit_index
 1244 06e0 14E0     		b	.L62	@
 1245              	.L63:
 313:code/main.c   ****                 }else {
 314:code/main.c   ****                   Mode = 0x00;
 1246              		.loc 1 314 0
 1247 06e2 4F23     		movs	r3, #79	@ tmp754,
 1248 06e4 6B44     		add	r3, r3, sp	@ tmp754,
 1249 06e6 0022     		movs	r2, #0	@ tmp755,
 1250 06e8 1A70     		strb	r2, [r3]	@ tmp756, Mode
 315:code/main.c   ****                   wheel_size = digits[2]*100 + digits[1]*10 + digits[0];
 1251              		.loc 1 315 0
 1252 06ea 03AB     		add	r3, sp, #12	@ tmp757,,
 1253 06ec 9B78     		ldrb	r3, [r3, #2]	@ D.4611,
 1254 06ee 1A00     		movs	r2, r3	@ D.4613, D.4611
 1255 06f0 6423     		movs	r3, #100	@ tmp758,
 1256 06f2 5A43     		muls	r2, r3	@ D.4613, tmp758
 1257 06f4 03AB     		add	r3, sp, #12	@ tmp759,,
 1258 06f6 5B78     		ldrb	r3, [r3, #1]	@ D.4611,
 1259 06f8 1900     		movs	r1, r3	@ D.4613, D.4611
 1260 06fa 0B00     		movs	r3, r1	@ tmp760, D.4613
 1261 06fc 9B00     		lsls	r3, r3, #2	@ tmp760, tmp760,
 1262 06fe 5B18     		adds	r3, r3, r1	@ tmp760, tmp760, D.4613
 1263 0700 5B00     		lsls	r3, r3, #1	@ tmp761, tmp760,
 1264 0702 D318     		adds	r3, r2, r3	@ D.4613, D.4613, D.4613
 1265 0704 03AA     		add	r2, sp, #12	@ tmp762,,
 1266 0706 1278     		ldrb	r2, [r2]	@ D.4611, digits
 1267 0708 9B18     		adds	r3, r3, r2	@ D.4613, D.4613, D.4613
 1268 070a 0593     		str	r3, [sp, #20]	@ D.4613, wheel_size
 1269              	.L62:
 316:code/main.c   ****                 }
 317:code/main.c   ****               }
 318:code/main.c   **** 
 319:code/main.c   ****               if ( read_nTrip() == 0 ) {
 1270              		.loc 1 319 0
 1271 070c FFF7FEFF 		bl	read_nTrip	@
 1272 0710 031E     		subs	r3, r0, #0	@ D.4612,,
 1273 0712 18D1     		bne	.L64	@,
 320:code/main.c   ****                 digits[digit_index] += 1;
 1274              		.loc 1 320 0
 1275 0714 2223     		movs	r3, #34	@ tmp763,
 1276 0716 6B44     		add	r3, r3, sp	@ tmp763,
ARM GAS  /tmp/ccun4gHj.s 			page 29


 1277 0718 1B78     		ldrb	r3, [r3]	@ D.4613, digit_index
 1278 071a 2222     		movs	r2, #34	@ tmp764,
 1279 071c 6A44     		add	r2, r2, sp	@ tmp764,
 1280 071e 1278     		ldrb	r2, [r2]	@ D.4613, digit_index
 1281 0720 03A9     		add	r1, sp, #12	@ tmp765,,
 1282 0722 8A5C     		ldrb	r2, [r1, r2]	@ D.4611, digits
 1283 0724 0132     		adds	r2, r2, #1	@ tmp766,
 1284 0726 D1B2     		uxtb	r1, r2	@ D.4611, tmp766
 1285 0728 03AA     		add	r2, sp, #12	@ tmp767,,
 1286 072a D154     		strb	r1, [r2, r3]	@ tmp768, digits
 321:code/main.c   ****                 if (digits[digit_index] > 0x09) {
 1287              		.loc 1 321 0
 1288 072c 2223     		movs	r3, #34	@ tmp769,
 1289 072e 6B44     		add	r3, r3, sp	@ tmp769,
 1290 0730 1B78     		ldrb	r3, [r3]	@ D.4613, digit_index
 1291 0732 03AA     		add	r2, sp, #12	@ tmp770,,
 1292 0734 D35C     		ldrb	r3, [r2, r3]	@ D.4611, digits
 1293 0736 092B     		cmp	r3, #9	@ D.4611,
 1294 0738 05D9     		bls	.L64	@,
 322:code/main.c   ****                   digits[digit_index] = 0x00;
 1295              		.loc 1 322 0
 1296 073a 2223     		movs	r3, #34	@ tmp771,
 1297 073c 6B44     		add	r3, r3, sp	@ tmp771,
 1298 073e 1B78     		ldrb	r3, [r3]	@ D.4613, digit_index
 1299 0740 03AA     		add	r2, sp, #12	@ tmp772,,
 1300 0742 0021     		movs	r1, #0	@ tmp773,
 1301 0744 D154     		strb	r1, [r2, r3]	@ tmp774, digits
 1302              	.L64:
 323:code/main.c   ****                 }
 324:code/main.c   ****               }  
 325:code/main.c   **** 
 326:code/main.c   ****               DP = 0x01;
 1303              		.loc 1 326 0
 1304 0746 2323     		movs	r3, #35	@ tmp775,
 1305 0748 6B44     		add	r3, r3, sp	@ tmp775,
 1306 074a 0122     		movs	r2, #1	@ tmp776,
 1307 074c 1A70     		strb	r2, [r3]	@ tmp777, DP
 327:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 1308              		.loc 1 327 0
 1309 074e 03AB     		add	r3, sp, #12	@ tmp778,,
 1310 0750 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 1311 0752 03AB     		add	r3, sp, #12	@ tmp779,,
 1312 0754 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 1313 0756 03AB     		add	r3, sp, #12	@ tmp780,,
 1314 0758 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 1315 075a 03AB     		add	r3, sp, #12	@ tmp781,,
 1316 075c 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 1317 075e 2322     		movs	r2, #35	@ tmp782,
 1318 0760 6A44     		add	r2, r2, sp	@ tmp782,
 1319 0762 1078     		ldrb	r0, [r2]	@ tmp783, DP
 1320 0764 0093     		str	r3, [sp]	@ D.4611,
 1321 0766 2B00     		movs	r3, r5	@, D.4611
 1322 0768 2200     		movs	r2, r4	@, D.4611
 1323 076a FFF7FEFF 		bl	connect_digits	@
 1324 076e 0300     		movs	r3, r0	@ D.4612,
 1325 0770 1800     		movs	r0, r3	@, D.4612
 1326 0772 FFF7FEFF 		bl	write_led	@
ARM GAS  /tmp/ccun4gHj.s 			page 30


 328:code/main.c   ****         break;
 1327              		.loc 1 328 0
 1328 0776 80E0     		b	.L50	@
 1329              	.L47:
 329:code/main.c   ****       case 0x08: // set weight     (unit: kg)
 330:code/main.c   ****               if ( read_nMode() == 0 ) {
 1330              		.loc 1 330 0
 1331 0778 FFF7FEFF 		bl	read_nMode	@
 1332 077c 031E     		subs	r3, r0, #0	@ D.4612,,
 1333 077e 21D1     		bne	.L65	@,
 331:code/main.c   ****                 if (digit_index!=0x00){
 1334              		.loc 1 331 0
 1335 0780 2223     		movs	r3, #34	@ tmp784,
 1336 0782 6B44     		add	r3, r3, sp	@ tmp784,
 1337 0784 1B78     		ldrb	r3, [r3]	@ tmp785, digit_index
 1338 0786 002B     		cmp	r3, #0	@ tmp785,
 1339 0788 07D0     		beq	.L66	@,
 332:code/main.c   ****                   digit_index--;
 1340              		.loc 1 332 0
 1341 078a 2223     		movs	r3, #34	@ tmp786,
 1342 078c 6B44     		add	r3, r3, sp	@ tmp786,
 1343 078e 1A78     		ldrb	r2, [r3]	@ D.4611, digit_index
 1344 0790 2223     		movs	r3, #34	@ tmp787,
 1345 0792 6B44     		add	r3, r3, sp	@ tmp787,
 1346 0794 013A     		subs	r2, r2, #1	@ tmp788,
 1347 0796 1A70     		strb	r2, [r3]	@ tmp789, digit_index
 1348 0798 14E0     		b	.L65	@
 1349              	.L66:
 333:code/main.c   ****                 }else {
 334:code/main.c   ****                   Mode = 0x00;
 1350              		.loc 1 334 0
 1351 079a 4F23     		movs	r3, #79	@ tmp790,
 1352 079c 6B44     		add	r3, r3, sp	@ tmp790,
 1353 079e 0022     		movs	r2, #0	@ tmp791,
 1354 07a0 1A70     		strb	r2, [r3]	@ tmp792, Mode
 335:code/main.c   ****                   weight = digits[2]*100 + digits[1]*10 + digits[0];
 1355              		.loc 1 335 0
 1356 07a2 03AB     		add	r3, sp, #12	@ tmp793,,
 1357 07a4 9B78     		ldrb	r3, [r3, #2]	@ D.4611,
 1358 07a6 1A00     		movs	r2, r3	@ D.4613, D.4611
 1359 07a8 6423     		movs	r3, #100	@ tmp794,
 1360 07aa 5A43     		muls	r2, r3	@ D.4613, tmp794
 1361 07ac 03AB     		add	r3, sp, #12	@ tmp795,,
 1362 07ae 5B78     		ldrb	r3, [r3, #1]	@ D.4611,
 1363 07b0 1900     		movs	r1, r3	@ D.4613, D.4611
 1364 07b2 0B00     		movs	r3, r1	@ tmp796, D.4613
 1365 07b4 9B00     		lsls	r3, r3, #2	@ tmp796, tmp796,
 1366 07b6 5B18     		adds	r3, r3, r1	@ tmp796, tmp796, D.4613
 1367 07b8 5B00     		lsls	r3, r3, #1	@ tmp797, tmp796,
 1368 07ba D318     		adds	r3, r2, r3	@ D.4613, D.4613, D.4613
 1369 07bc 03AA     		add	r2, sp, #12	@ tmp798,,
 1370 07be 1278     		ldrb	r2, [r2]	@ D.4611, digits
 1371 07c0 9B18     		adds	r3, r3, r2	@ D.4613, D.4613, D.4613
 1372 07c2 0693     		str	r3, [sp, #24]	@ D.4613, weight
 1373              	.L65:
 336:code/main.c   ****                 }
 337:code/main.c   ****               }
ARM GAS  /tmp/ccun4gHj.s 			page 31


 338:code/main.c   **** 
 339:code/main.c   ****               if ( read_nTrip() == 0 ) {
 1374              		.loc 1 339 0
 1375 07c4 FFF7FEFF 		bl	read_nTrip	@
 1376 07c8 031E     		subs	r3, r0, #0	@ D.4612,,
 1377 07ca 18D1     		bne	.L67	@,
 340:code/main.c   ****                 digits[digit_index] += 1;
 1378              		.loc 1 340 0
 1379 07cc 2223     		movs	r3, #34	@ tmp799,
 1380 07ce 6B44     		add	r3, r3, sp	@ tmp799,
 1381 07d0 1B78     		ldrb	r3, [r3]	@ D.4613, digit_index
 1382 07d2 2222     		movs	r2, #34	@ tmp800,
 1383 07d4 6A44     		add	r2, r2, sp	@ tmp800,
 1384 07d6 1278     		ldrb	r2, [r2]	@ D.4613, digit_index
 1385 07d8 03A9     		add	r1, sp, #12	@ tmp801,,
 1386 07da 8A5C     		ldrb	r2, [r1, r2]	@ D.4611, digits
 1387 07dc 0132     		adds	r2, r2, #1	@ tmp802,
 1388 07de D1B2     		uxtb	r1, r2	@ D.4611, tmp802
 1389 07e0 03AA     		add	r2, sp, #12	@ tmp803,,
 1390 07e2 D154     		strb	r1, [r2, r3]	@ tmp804, digits
 341:code/main.c   ****                 if (digits[digit_index] > 0x09) {
 1391              		.loc 1 341 0
 1392 07e4 2223     		movs	r3, #34	@ tmp805,
 1393 07e6 6B44     		add	r3, r3, sp	@ tmp805,
 1394 07e8 1B78     		ldrb	r3, [r3]	@ D.4613, digit_index
 1395 07ea 03AA     		add	r2, sp, #12	@ tmp806,,
 1396 07ec D35C     		ldrb	r3, [r2, r3]	@ D.4611, digits
 1397 07ee 092B     		cmp	r3, #9	@ D.4611,
 1398 07f0 05D9     		bls	.L67	@,
 342:code/main.c   ****                   digits[digit_index] = 0x00;
 1399              		.loc 1 342 0
 1400 07f2 2223     		movs	r3, #34	@ tmp807,
 1401 07f4 6B44     		add	r3, r3, sp	@ tmp807,
 1402 07f6 1B78     		ldrb	r3, [r3]	@ D.4613, digit_index
 1403 07f8 03AA     		add	r2, sp, #12	@ tmp808,,
 1404 07fa 0021     		movs	r1, #0	@ tmp809,
 1405 07fc D154     		strb	r1, [r2, r3]	@ tmp810, digits
 1406              	.L67:
 343:code/main.c   ****                 }
 344:code/main.c   ****               }  
 345:code/main.c   **** 
 346:code/main.c   ****               DP = 0x01;
 1407              		.loc 1 346 0
 1408 07fe 2323     		movs	r3, #35	@ tmp811,
 1409 0800 6B44     		add	r3, r3, sp	@ tmp811,
 1410 0802 0122     		movs	r2, #1	@ tmp812,
 1411 0804 1A70     		strb	r2, [r3]	@ tmp813, DP
 347:code/main.c   **** 	      write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 1412              		.loc 1 347 0
 1413 0806 03AB     		add	r3, sp, #12	@ tmp814,,
 1414 0808 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 1415 080a 03AB     		add	r3, sp, #12	@ tmp815,,
 1416 080c 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 1417 080e 03AB     		add	r3, sp, #12	@ tmp816,,
 1418 0810 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 1419 0812 03AB     		add	r3, sp, #12	@ tmp817,,
 1420 0814 1B78     		ldrb	r3, [r3]	@ D.4611, digits
ARM GAS  /tmp/ccun4gHj.s 			page 32


 1421 0816 2322     		movs	r2, #35	@ tmp818,
 1422 0818 6A44     		add	r2, r2, sp	@ tmp818,
 1423 081a 1078     		ldrb	r0, [r2]	@ tmp819, DP
 1424 081c 0093     		str	r3, [sp]	@ D.4611,
 1425 081e 2B00     		movs	r3, r5	@, D.4611
 1426 0820 2200     		movs	r2, r4	@, D.4611
 1427 0822 FFF7FEFF 		bl	connect_digits	@
 1428 0826 0300     		movs	r3, r0	@ D.4612,
 1429 0828 1800     		movs	r0, r3	@, D.4612
 1430 082a FFF7FEFF 		bl	write_led	@
 348:code/main.c   ****         break;
 1431              		.loc 1 348 0
 1432 082e 24E0     		b	.L50	@
 1433              	.L37:
 349:code/main.c   ****       default:  
 350:code/main.c   **** 
 351:code/main.c   ****             digits[0] = 0x08;
 1434              		.loc 1 351 0
 1435 0830 03AB     		add	r3, sp, #12	@ tmp820,,
 1436 0832 0822     		movs	r2, #8	@ tmp821,
 1437 0834 1A70     		strb	r2, [r3]	@ tmp822, digits
 352:code/main.c   ****             digits[1] = 0x08;
 1438              		.loc 1 352 0
 1439 0836 03AB     		add	r3, sp, #12	@ tmp823,,
 1440 0838 0822     		movs	r2, #8	@ tmp824,
 1441 083a 5A70     		strb	r2, [r3, #1]	@ tmp825, digits
 353:code/main.c   ****             digits[2] = 0x08;
 1442              		.loc 1 353 0
 1443 083c 03AB     		add	r3, sp, #12	@ tmp826,,
 1444 083e 0822     		movs	r2, #8	@ tmp827,
 1445 0840 9A70     		strb	r2, [r3, #2]	@ tmp828, digits
 354:code/main.c   ****             digits[3] = 0x00;
 1446              		.loc 1 354 0
 1447 0842 03AB     		add	r3, sp, #12	@ tmp829,,
 1448 0844 0022     		movs	r2, #0	@ tmp830,
 1449 0846 DA70     		strb	r2, [r3, #3]	@ tmp831, digits
 355:code/main.c   ****             DP = 0x07;
 1450              		.loc 1 355 0
 1451 0848 2323     		movs	r3, #35	@ tmp832,
 1452 084a 6B44     		add	r3, r3, sp	@ tmp832,
 1453 084c 0722     		movs	r2, #7	@ tmp833,
 1454 084e 1A70     		strb	r2, [r3]	@ tmp834, DP
 356:code/main.c   **** 
 357:code/main.c   ****             write_led(connect_digits(DP, digits[3], digits[2], digits[1], digits[0]));
 1455              		.loc 1 357 0
 1456 0850 03AB     		add	r3, sp, #12	@ tmp835,,
 1457 0852 D978     		ldrb	r1, [r3, #3]	@ D.4611,
 1458 0854 03AB     		add	r3, sp, #12	@ tmp836,,
 1459 0856 9C78     		ldrb	r4, [r3, #2]	@ D.4611,
 1460 0858 03AB     		add	r3, sp, #12	@ tmp837,,
 1461 085a 5D78     		ldrb	r5, [r3, #1]	@ D.4611,
 1462 085c 03AB     		add	r3, sp, #12	@ tmp838,,
 1463 085e 1B78     		ldrb	r3, [r3]	@ D.4611, digits
 1464 0860 2322     		movs	r2, #35	@ tmp839,
 1465 0862 6A44     		add	r2, r2, sp	@ tmp839,
 1466 0864 1078     		ldrb	r0, [r2]	@ tmp840, DP
 1467 0866 0093     		str	r3, [sp]	@ D.4611,
ARM GAS  /tmp/ccun4gHj.s 			page 33


 1468 0868 2B00     		movs	r3, r5	@, D.4611
 1469 086a 2200     		movs	r2, r4	@, D.4611
 1470 086c FFF7FEFF 		bl	connect_digits	@
 1471 0870 0300     		movs	r3, r0	@ D.4612,
 1472 0872 1800     		movs	r0, r3	@, D.4612
 1473 0874 FFF7FEFF 		bl	write_led	@
 358:code/main.c   ****         break;
 1474              		.loc 1 358 0
 1475 0878 C046     		nop
 1476              	.L50:
 359:code/main.c   ****     }
 360:code/main.c   **** 
 361:code/main.c   **** 
 362:code/main.c   **** // accumulate the fork_counter and timer, calculate average speed
 363:code/main.c   ****     if (read_nFork() == 0) {
 1477              		.loc 1 363 0
 1478 087a FFF7FEFF 		bl	read_nFork	@
 1479 087e 031E     		subs	r3, r0, #0	@ D.4612,,
 1480 0880 32D1     		bne	.L68	@,
 364:code/main.c   **** 
 365:code/main.c   ****       if(read_fork_cnt() != 0){
 1481              		.loc 1 365 0
 1482 0882 FFF7FEFF 		bl	read_fork_cnt	@
 1483 0886 031E     		subs	r3, r0, #0	@ D.4612,,
 1484 0888 10D0     		beq	.L69	@,
 366:code/main.c   ****         fork_time = read_fork_cnt();
 1485              		.loc 1 366 0
 1486 088a FFF7FEFF 		bl	read_fork_cnt	@
 1487 088e 0300     		movs	r3, r0	@ tmp841,
 1488 0890 0B93     		str	r3, [sp, #44]	@ tmp841, fork_time
 367:code/main.c   ****         //speedometer = wheel_size/(fork_time*30.52/1000)*360; 
 368:code/main.c   ****         speedometer = (wheel_size*11796/fork_time);  // unit: 100m/h
 1489              		.loc 1 368 0
 1490 0892 059B     		ldr	r3, [sp, #20]	@ tmp842, wheel_size
 1491 0894 414A     		ldr	r2, .L80	@ tmp843,
 1492 0896 5343     		muls	r3, r2	@ D.4612, tmp843
 1493 0898 0B99     		ldr	r1, [sp, #44]	@, fork_time
 1494 089a 1800     		movs	r0, r3	@, D.4612
 1495 089c FFF7FEFF 		bl	__aeabi_uidiv	@
 1496 08a0 0300     		movs	r3, r0	@ tmp847,
 1497 08a2 0C93     		str	r3, [sp, #48]	@ tmp847, speedometer
 369:code/main.c   ****         //av_ssni_419 = (av_ssni_419*(fork_counter)+speedometer)/(fork_counter+1);
 370:code/main.c   ****         //av_ssni_419 = (0.36*((fork_counter) * wheel_size))/(time);
 371:code/main.c   ****         fork_counter = fork_counter + 1;
 1498              		.loc 1 371 0
 1499 08a4 129B     		ldr	r3, [sp, #72]	@ tmp849, fork_counter
 1500 08a6 0133     		adds	r3, r3, #1	@ tmp848,
 1501 08a8 1293     		str	r3, [sp, #72]	@ tmp848, fork_counter
 1502 08aa 01E0     		b	.L70	@
 1503              	.L69:
 372:code/main.c   ****       }
 373:code/main.c   ****       else {
 374:code/main.c   ****         speedometer = 0;
 1504              		.loc 1 374 0
 1505 08ac 0023     		movs	r3, #0	@ tmp850,
 1506 08ae 0C93     		str	r3, [sp, #48]	@ tmp850, speedometer
 1507              	.L70:
ARM GAS  /tmp/ccun4gHj.s 			page 34


 375:code/main.c   ****       }
 376:code/main.c   **** 
 377:code/main.c   ****       accumulate_time += fork_time;
 1508              		.loc 1 377 0
 1509 08b0 0F9A     		ldr	r2, [sp, #60]	@ tmp852, accumulate_time
 1510 08b2 0B9B     		ldr	r3, [sp, #44]	@ tmp853, fork_time
 1511 08b4 D318     		adds	r3, r2, r3	@ tmp851, tmp852, tmp853
 1512 08b6 0F93     		str	r3, [sp, #60]	@ tmp851, accumulate_time
 378:code/main.c   **** 
 379:code/main.c   ****       if (DiscreteDisplay < 0x8000) {
 1513              		.loc 1 379 0
 1514 08b8 08AB     		add	r3, sp, #32	@ tmp854,,
 1515 08ba 0022     		movs	r2, #0	@ tmp923,
 1516 08bc 9B5E     		ldrsh	r3, [r3, r2]	@ D.4614, tmp854, tmp923
 1517 08be 002B     		cmp	r3, #0	@ D.4614,
 1518 08c0 0BDB     		blt	.L71	@,
 380:code/main.c   ****         DiscreteDisplay += fork_time;
 1519              		.loc 1 380 0
 1520 08c2 0B9B     		ldr	r3, [sp, #44]	@ tmp856, fork_time
 1521 08c4 99B2     		uxth	r1, r3	@ D.4615, tmp855
 1522 08c6 08AB     		add	r3, sp, #32	@ tmp857,,
 1523 08c8 08AA     		add	r2, sp, #32	@ tmp858,,
 1524 08ca 1288     		ldrh	r2, [r2]	@ tmp859, DiscreteDisplay
 1525 08cc 8A18     		adds	r2, r1, r2	@ tmp860, D.4615, tmp859
 1526 08ce 1A80     		strh	r2, [r3]	@ tmp861, DiscreteDisplay
 381:code/main.c   ****         display = false;
 1527              		.loc 1 381 0
 1528 08d0 1F23     		movs	r3, #31	@ tmp862,
 1529 08d2 6B44     		add	r3, r3, sp	@ tmp862,
 1530 08d4 0022     		movs	r2, #0	@ tmp863,
 1531 08d6 1A70     		strb	r2, [r3]	@ tmp864, display
 1532 08d8 06E0     		b	.L68	@
 1533              	.L71:
 382:code/main.c   ****       }
 383:code/main.c   ****       else {
 384:code/main.c   ****         DiscreteDisplay = 0;
 1534              		.loc 1 384 0
 1535 08da 08AB     		add	r3, sp, #32	@ tmp865,,
 1536 08dc 0022     		movs	r2, #0	@ tmp866,
 1537 08de 1A80     		strh	r2, [r3]	@ tmp867, DiscreteDisplay
 385:code/main.c   ****         display = true; 
 1538              		.loc 1 385 0
 1539 08e0 1F23     		movs	r3, #31	@ tmp868,
 1540 08e2 6B44     		add	r3, r3, sp	@ tmp868,
 1541 08e4 0122     		movs	r2, #1	@ tmp869,
 1542 08e6 1A70     		strb	r2, [r3]	@ tmp870, display
 1543              	.L68:
 386:code/main.c   ****       }
 387:code/main.c   ****     }
 388:code/main.c   ****   
 389:code/main.c   ****     if(read_fork_cnt() == 0){speedometer = 0;}
 1544              		.loc 1 389 0
 1545 08e8 FFF7FEFF 		bl	read_fork_cnt	@
 1546 08ec 031E     		subs	r3, r0, #0	@ D.4612,,
 1547 08ee 01D1     		bne	.L72	@,
 1548              		.loc 1 389 0 is_stmt 0 discriminator 1
 1549 08f0 0023     		movs	r3, #0	@ tmp871,
ARM GAS  /tmp/ccun4gHj.s 			page 35


 1550 08f2 0C93     		str	r3, [sp, #48]	@ tmp871, speedometer
 1551              	.L72:
 390:code/main.c   **** 
 391:code/main.c   **** // calculate the distance
 392:code/main.c   ****     odometer = fork_counter * wheel_size / 10000;
 1552              		.loc 1 392 0 is_stmt 1
 1553 08f4 129B     		ldr	r3, [sp, #72]	@ tmp872, fork_counter
 1554 08f6 059A     		ldr	r2, [sp, #20]	@ tmp873, wheel_size
 1555 08f8 5343     		muls	r3, r2	@ D.4612, tmp873
 1556 08fa 2949     		ldr	r1, .L80+4	@,
 1557 08fc 1800     		movs	r0, r3	@, D.4612
 1558 08fe FFF7FEFF 		bl	__aeabi_uidiv	@
 1559 0902 0300     		movs	r3, r0	@ tmp876,
 1560 0904 1193     		str	r3, [sp, #68]	@ tmp876, odometer
 393:code/main.c   **** 
 394:code/main.c   **** // calculate the timer
 395:code/main.c   ****     //time = read_timer()/0x00008000;
 396:code/main.c   ****     time = accumulate_time/0x00008000;
 1561              		.loc 1 396 0
 1562 0906 0F9B     		ldr	r3, [sp, #60]	@ tmp878, accumulate_time
 1563 0908 DB0B     		lsrs	r3, r3, #15	@ tmp877, tmp878,
 1564 090a 1093     		str	r3, [sp, #64]	@ tmp877, time
 397:code/main.c   **** 
 398:code/main.c   **** // compute the wheel speed
 399:code/main.c   ****     if (speedometer > 0x000003E7){
 1565              		.loc 1 399 0
 1566 090c 0C9B     		ldr	r3, [sp, #48]	@ tmp879, speedometer
 1567 090e 254A     		ldr	r2, .L80+8	@ tmp880,
 1568 0910 9342     		cmp	r3, r2	@ tmp879, tmp880
 1569 0912 01D9     		bls	.L73	@,
 400:code/main.c   ****       speedometer = 0x000003E7;
 1570              		.loc 1 400 0
 1571 0914 234B     		ldr	r3, .L80+8	@ tmp881,
 1572 0916 0C93     		str	r3, [sp, #48]	@ tmp881, speedometer
 1573              	.L73:
 401:code/main.c   ****     }
 402:code/main.c   **** 
 403:code/main.c   ****   // compute the average wheel speed
 404:code/main.c   ****      av_ssni_419 = ((fork_counter) * wheel_size*11796)/(accumulate_time);
 1574              		.loc 1 404 0
 1575 0918 129B     		ldr	r3, [sp, #72]	@ tmp882, fork_counter
 1576 091a 059A     		ldr	r2, [sp, #20]	@ tmp883, wheel_size
 1577 091c 5343     		muls	r3, r2	@ D.4612, tmp883
 1578 091e 1F4A     		ldr	r2, .L80	@ tmp884,
 1579 0920 5343     		muls	r3, r2	@ D.4612, tmp884
 1580 0922 0F99     		ldr	r1, [sp, #60]	@, accumulate_time
 1581 0924 1800     		movs	r0, r3	@, D.4612
 1582 0926 FFF7FEFF 		bl	__aeabi_uidiv	@
 1583 092a 0300     		movs	r3, r0	@ tmp888,
 1584 092c 0E93     		str	r3, [sp, #56]	@ tmp888, av_ssni_419
 405:code/main.c   **** 
 406:code/main.c   **** 
 407:code/main.c   **** // computer the pedal speed
 408:code/main.c   ****     //cadence_meter = 60/(read_pedal_cnt()*30.52/1000000);
 409:code/main.c   ****     cadence_meter = 1965924/read_pedal_cnt();
 1585              		.loc 1 409 0
 1586 092e FFF7FEFF 		bl	read_pedal_cnt	@
ARM GAS  /tmp/ccun4gHj.s 			page 36


 1587 0932 0300     		movs	r3, r0	@ D.4612,
 1588 0934 1900     		movs	r1, r3	@, D.4612
 1589 0936 1C48     		ldr	r0, .L80+12	@,
 1590 0938 FFF7FEFF 		bl	__aeabi_uidiv	@
 1591 093c 0300     		movs	r3, r0	@ tmp891,
 1592 093e 0A93     		str	r3, [sp, #40]	@ tmp891, cadence_meter
 410:code/main.c   ****     if ((cadence_meter%5) != 0){
 1593              		.loc 1 410 0
 1594 0940 0A9B     		ldr	r3, [sp, #40]	@ tmp892, cadence_meter
 1595 0942 0521     		movs	r1, #5	@,
 1596 0944 1800     		movs	r0, r3	@, tmp892
 1597 0946 FFF7FEFF 		bl	__aeabi_uidivmod	@
 1598 094a 0B1E     		subs	r3, r1, #0	@ tmp897,,
 1599 094c 0AD0     		beq	.L74	@,
 411:code/main.c   ****       cadence_meter = (cadence_meter/5+1)*5;
 1600              		.loc 1 411 0
 1601 094e 0A9B     		ldr	r3, [sp, #40]	@ tmp898, cadence_meter
 1602 0950 0521     		movs	r1, #5	@,
 1603 0952 1800     		movs	r0, r3	@, tmp898
 1604 0954 FFF7FEFF 		bl	__aeabi_uidiv	@
 1605 0958 0300     		movs	r3, r0	@ tmp901,
 1606 095a 5A1C     		adds	r2, r3, #1	@ D.4612, D.4612,
 1607 095c 1300     		movs	r3, r2	@ tmp902, D.4612
 1608 095e 9B00     		lsls	r3, r3, #2	@ tmp902, tmp902,
 1609 0960 9B18     		adds	r3, r3, r2	@ tmp903, tmp902, D.4612
 1610 0962 0A93     		str	r3, [sp, #40]	@ tmp903, cadence_meter
 1611              	.L74:
 412:code/main.c   ****     }               
 413:code/main.c   **** 
 414:code/main.c   ****     if (cadence_meter >= 0x000003E3){
 1612              		.loc 1 414 0
 1613 0964 0A9B     		ldr	r3, [sp, #40]	@ tmp904, cadence_meter
 1614 0966 114A     		ldr	r2, .L80+16	@ tmp905,
 1615 0968 9342     		cmp	r3, r2	@ tmp904, tmp905
 1616 096a 01D9     		bls	.L75	@,
 415:code/main.c   ****       cadence_meter = 0x000003E3;
 1617              		.loc 1 415 0
 1618 096c 104B     		ldr	r3, .L80+20	@ tmp906,
 1619 096e 0A93     		str	r3, [sp, #40]	@ tmp906, cadence_meter
 1620              	.L75:
 416:code/main.c   ****     }
 417:code/main.c   **** 
 418:code/main.c   **** // save the maximum speed 
 419:code/main.c   ****     if (speedometer >= max_speed){
 1621              		.loc 1 419 0
 1622 0970 0C9A     		ldr	r2, [sp, #48]	@ tmp907, speedometer
 1623 0972 0D9B     		ldr	r3, [sp, #52]	@ tmp908, max_speed
 1624 0974 9A42     		cmp	r2, r3	@ tmp907, tmp908
 1625 0976 01D3     		bcc	.L76	@,
 420:code/main.c   ****       max_speed = speedometer;
 1626              		.loc 1 420 0
 1627 0978 0C9B     		ldr	r3, [sp, #48]	@ tmp909, speedometer
 1628 097a 0D93     		str	r3, [sp, #52]	@ tmp909, max_speed
 1629              	.L76:
 421:code/main.c   ****     }
 422:code/main.c   **** 
 423:code/main.c   **** // compute the clorie 
ARM GAS  /tmp/ccun4gHj.s 			page 37


 424:code/main.c   ****     calorie = weight * fork_counter * wheel_size*3/500000;
 1630              		.loc 1 424 0
 1631 097c 069B     		ldr	r3, [sp, #24]	@ tmp910, weight
 1632 097e 129A     		ldr	r2, [sp, #72]	@ tmp911, fork_counter
 1633 0980 5343     		muls	r3, r2	@ D.4612, tmp911
 1634 0982 059A     		ldr	r2, [sp, #20]	@ tmp912, wheel_size
 1635 0984 5A43     		muls	r2, r3	@ D.4612, D.4612
 1636 0986 1300     		movs	r3, r2	@ tmp913, D.4612
 1637 0988 5B00     		lsls	r3, r3, #1	@ tmp913, tmp913,
 1638 098a 9B18     		adds	r3, r3, r2	@ D.4612, tmp913, D.4612
 1639 098c 0949     		ldr	r1, .L80+24	@,
 1640 098e 1800     		movs	r0, r3	@, D.4612
 1641 0990 FFF7FEFF 		bl	__aeabi_uidiv	@
 1642 0994 0300     		movs	r3, r0	@ tmp916,
 1643 0996 0993     		str	r3, [sp, #36]	@ tmp916, calorie
 425:code/main.c   ****   }
 1644              		.loc 1 425 0
 1645 0998 FFF701FC 		bl	.L77	@ far jump	@
 1646              	.L81:
 1647              		.align	2
 1648              	.L80:
 1649 099c 142E0000 		.word	11796
 1650 09a0 10270000 		.word	10000
 1651 09a4 E7030000 		.word	999
 1652 09a8 64FF1D00 		.word	1965924
 1653 09ac E2030000 		.word	994
 1654 09b0 E3030000 		.word	995
 1655 09b4 20A10700 		.word	500000
 1656              		.cfi_endproc
 1657              	.LFE9:
 1658              		.size	main, .-main
 1659              	.Letext0:
 1660              		.file 2 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 1661              		.file 3 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 1662              		.section	.debug_info,"",%progbits
 1663              	.Ldebug_info0:
 1664 0000 C1030000 		.4byte	0x3c1
 1665 0004 0200     		.2byte	0x2
 1666 0006 00000000 		.4byte	.Ldebug_abbrev0
 1667 000a 04       		.byte	0x4
 1668 000b 01       		.uleb128 0x1
 1669 000c 7F020000 		.4byte	.LASF53
 1670 0010 0C       		.byte	0xc
 1671 0011 1F010000 		.4byte	.LASF54
 1672 0015 CA000000 		.4byte	.LASF55
 1673 0019 00000000 		.4byte	.Ltext0
 1674 001d B8090000 		.4byte	.Letext0
 1675 0021 00000000 		.4byte	.Ldebug_line0
 1676 0025 02       		.uleb128 0x2
 1677 0026 01       		.byte	0x1
 1678 0027 06       		.byte	0x6
 1679 0028 74010000 		.4byte	.LASF0
 1680 002c 03       		.uleb128 0x3
 1681 002d 15010000 		.4byte	.LASF3
 1682 0031 02       		.byte	0x2
 1683 0032 1D       		.byte	0x1d
 1684 0033 37000000 		.4byte	0x37
ARM GAS  /tmp/ccun4gHj.s 			page 38


 1685 0037 02       		.uleb128 0x2
 1686 0038 01       		.byte	0x1
 1687 0039 08       		.byte	0x8
 1688 003a 66010000 		.4byte	.LASF1
 1689 003e 02       		.uleb128 0x2
 1690 003f 02       		.byte	0x2
 1691 0040 05       		.byte	0x5
 1692 0041 0F000000 		.4byte	.LASF2
 1693 0045 03       		.uleb128 0x3
 1694 0046 4C000000 		.4byte	.LASF4
 1695 004a 02       		.byte	0x2
 1696 004b 2B       		.byte	0x2b
 1697 004c 50000000 		.4byte	0x50
 1698 0050 02       		.uleb128 0x2
 1699 0051 02       		.byte	0x2
 1700 0052 07       		.byte	0x7
 1701 0053 BB010000 		.4byte	.LASF5
 1702 0057 02       		.uleb128 0x2
 1703 0058 04       		.byte	0x4
 1704 0059 05       		.byte	0x5
 1705 005a B6000000 		.4byte	.LASF6
 1706 005e 03       		.uleb128 0x3
 1707 005f 3A000000 		.4byte	.LASF7
 1708 0063 02       		.byte	0x2
 1709 0064 41       		.byte	0x41
 1710 0065 69000000 		.4byte	0x69
 1711 0069 02       		.uleb128 0x2
 1712 006a 04       		.byte	0x4
 1713 006b 07       		.byte	0x7
 1714 006c 0B020000 		.4byte	.LASF8
 1715 0070 02       		.uleb128 0x2
 1716 0071 08       		.byte	0x8
 1717 0072 05       		.byte	0x5
 1718 0073 A8000000 		.4byte	.LASF9
 1719 0077 02       		.uleb128 0x2
 1720 0078 08       		.byte	0x8
 1721 0079 07       		.byte	0x7
 1722 007a 80010000 		.4byte	.LASF10
 1723 007e 04       		.uleb128 0x4
 1724 007f 04       		.byte	0x4
 1725 0080 05       		.byte	0x5
 1726 0081 696E7400 		.ascii	"int\000"
 1727 0085 02       		.uleb128 0x2
 1728 0086 04       		.byte	0x4
 1729 0087 07       		.byte	0x7
 1730 0088 A0010000 		.4byte	.LASF11
 1731 008c 03       		.uleb128 0x3
 1732 008d 71000000 		.4byte	.LASF12
 1733 0091 03       		.byte	0x3
 1734 0092 18       		.byte	0x18
 1735 0093 2C000000 		.4byte	0x2c
 1736 0097 03       		.uleb128 0x3
 1737 0098 AD010000 		.4byte	.LASF13
 1738 009c 03       		.byte	0x3
 1739 009d 24       		.byte	0x24
 1740 009e 45000000 		.4byte	0x45
 1741 00a2 03       		.uleb128 0x3
ARM GAS  /tmp/ccun4gHj.s 			page 39


 1742 00a3 97010000 		.4byte	.LASF14
 1743 00a7 03       		.byte	0x3
 1744 00a8 30       		.byte	0x30
 1745 00a9 5E000000 		.4byte	0x5e
 1746 00ad 05       		.uleb128 0x5
 1747 00ae 01       		.byte	0x1
 1748 00af 22000000 		.4byte	.LASF56
 1749 00b3 01       		.byte	0x1
 1750 00b4 1C       		.byte	0x1c
 1751 00b5 01       		.byte	0x1
 1752 00b6 00000000 		.4byte	.LFB0
 1753 00ba 18000000 		.4byte	.LFE0
 1754 00be 00000000 		.4byte	.LLST0
 1755 00c2 01       		.byte	0x1
 1756 00c3 D6000000 		.4byte	0xd6
 1757 00c7 06       		.uleb128 0x6
 1758 00c8 57000000 		.4byte	.LASF22
 1759 00cc 01       		.byte	0x1
 1760 00cd 1C       		.byte	0x1c
 1761 00ce A2000000 		.4byte	0xa2
 1762 00d2 02       		.byte	0x2
 1763 00d3 91       		.byte	0x91
 1764 00d4 7C       		.sleb128 -4
 1765 00d5 00       		.byte	0
 1766 00d6 07       		.uleb128 0x7
 1767 00d7 01       		.byte	0x1
 1768 00d8 9D000000 		.4byte	.LASF15
 1769 00dc 01       		.byte	0x1
 1770 00dd 22       		.byte	0x22
 1771 00de 01       		.byte	0x1
 1772 00df A2000000 		.4byte	0xa2
 1773 00e3 18000000 		.4byte	.LFB1
 1774 00e7 28000000 		.4byte	.LFE1
 1775 00eb 02       		.byte	0x2
 1776 00ec 7D       		.byte	0x7d
 1777 00ed 00       		.sleb128 0
 1778 00ee 01       		.byte	0x1
 1779 00ef 07       		.uleb128 0x7
 1780 00f0 01       		.byte	0x1
 1781 00f1 3E010000 		.4byte	.LASF16
 1782 00f5 01       		.byte	0x1
 1783 00f6 27       		.byte	0x27
 1784 00f7 01       		.byte	0x1
 1785 00f8 A2000000 		.4byte	0xa2
 1786 00fc 28000000 		.4byte	.LFB2
 1787 0100 38000000 		.4byte	.LFE2
 1788 0104 02       		.byte	0x2
 1789 0105 7D       		.byte	0x7d
 1790 0106 00       		.sleb128 0
 1791 0107 01       		.byte	0x1
 1792 0108 07       		.uleb128 0x7
 1793 0109 01       		.byte	0x1
 1794 010a E6010000 		.4byte	.LASF17
 1795 010e 01       		.byte	0x1
 1796 010f 2C       		.byte	0x2c
 1797 0110 01       		.byte	0x1
 1798 0111 A2000000 		.4byte	0xa2
ARM GAS  /tmp/ccun4gHj.s 			page 40


 1799 0115 38000000 		.4byte	.LFB3
 1800 0119 48000000 		.4byte	.LFE3
 1801 011d 02       		.byte	0x2
 1802 011e 7D       		.byte	0x7d
 1803 011f 00       		.sleb128 0
 1804 0120 01       		.byte	0x1
 1805 0121 07       		.uleb128 0x7
 1806 0122 01       		.byte	0x1
 1807 0123 12030000 		.4byte	.LASF18
 1808 0127 01       		.byte	0x1
 1809 0128 31       		.byte	0x31
 1810 0129 01       		.byte	0x1
 1811 012a A2000000 		.4byte	0xa2
 1812 012e 48000000 		.4byte	.LFB4
 1813 0132 58000000 		.4byte	.LFE4
 1814 0136 02       		.byte	0x2
 1815 0137 7D       		.byte	0x7d
 1816 0138 00       		.sleb128 0
 1817 0139 01       		.byte	0x1
 1818 013a 07       		.uleb128 0x7
 1819 013b 01       		.byte	0x1
 1820 013c BF000000 		.4byte	.LASF19
 1821 0140 01       		.byte	0x1
 1822 0141 44       		.byte	0x44
 1823 0142 01       		.byte	0x1
 1824 0143 A2000000 		.4byte	0xa2
 1825 0147 58000000 		.4byte	.LFB5
 1826 014b 68000000 		.4byte	.LFE5
 1827 014f 02       		.byte	0x2
 1828 0150 7D       		.byte	0x7d
 1829 0151 00       		.sleb128 0
 1830 0152 01       		.byte	0x1
 1831 0153 07       		.uleb128 0x7
 1832 0154 01       		.byte	0x1
 1833 0155 66000000 		.4byte	.LASF20
 1834 0159 01       		.byte	0x1
 1835 015a 49       		.byte	0x49
 1836 015b 01       		.byte	0x1
 1837 015c A2000000 		.4byte	0xa2
 1838 0160 68000000 		.4byte	.LFB6
 1839 0164 78000000 		.4byte	.LFE6
 1840 0168 02       		.byte	0x2
 1841 0169 7D       		.byte	0x7d
 1842 016a 00       		.sleb128 0
 1843 016b 01       		.byte	0x1
 1844 016c 07       		.uleb128 0x7
 1845 016d 01       		.byte	0x1
 1846 016e 47020000 		.4byte	.LASF21
 1847 0172 01       		.byte	0x1
 1848 0173 4E       		.byte	0x4e
 1849 0174 01       		.byte	0x1
 1850 0175 A2000000 		.4byte	0xa2
 1851 0179 78000000 		.4byte	.LFB7
 1852 017d 88000000 		.4byte	.LFE7
 1853 0181 02       		.byte	0x2
 1854 0182 7D       		.byte	0x7d
 1855 0183 00       		.sleb128 0
ARM GAS  /tmp/ccun4gHj.s 			page 41


 1856 0184 01       		.byte	0x1
 1857 0185 08       		.uleb128 0x8
 1858 0186 01       		.byte	0x1
 1859 0187 00000000 		.4byte	.LASF28
 1860 018b 01       		.byte	0x1
 1861 018c 58       		.byte	0x58
 1862 018d 01       		.byte	0x1
 1863 018e A2000000 		.4byte	0xa2
 1864 0192 88000000 		.4byte	.LFB8
 1865 0196 FE000000 		.4byte	.LFE8
 1866 019a 20000000 		.4byte	.LLST1
 1867 019e 01       		.byte	0x1
 1868 019f 38020000 		.4byte	0x238
 1869 01a3 09       		.uleb128 0x9
 1870 01a4 445000   		.ascii	"DP\000"
 1871 01a7 01       		.byte	0x1
 1872 01a8 58       		.byte	0x58
 1873 01a9 8C000000 		.4byte	0x8c
 1874 01ad 02       		.byte	0x2
 1875 01ae 91       		.byte	0x91
 1876 01af 57       		.sleb128 -41
 1877 01b0 06       		.uleb128 0x6
 1878 01b1 45000000 		.4byte	.LASF23
 1879 01b5 01       		.byte	0x1
 1880 01b6 58       		.byte	0x58
 1881 01b7 8C000000 		.4byte	0x8c
 1882 01bb 02       		.byte	0x2
 1883 01bc 91       		.byte	0x91
 1884 01bd 56       		.sleb128 -42
 1885 01be 06       		.uleb128 0x6
 1886 01bf 78020000 		.4byte	.LASF24
 1887 01c3 01       		.byte	0x1
 1888 01c4 58       		.byte	0x58
 1889 01c5 8C000000 		.4byte	0x8c
 1890 01c9 02       		.byte	0x2
 1891 01ca 91       		.byte	0x91
 1892 01cb 55       		.sleb128 -43
 1893 01cc 06       		.uleb128 0x6
 1894 01cd 33000000 		.4byte	.LASF25
 1895 01d1 01       		.byte	0x1
 1896 01d2 58       		.byte	0x58
 1897 01d3 8C000000 		.4byte	0x8c
 1898 01d7 02       		.byte	0x2
 1899 01d8 91       		.byte	0x91
 1900 01d9 54       		.sleb128 -44
 1901 01da 06       		.uleb128 0x6
 1902 01db 2C000000 		.4byte	.LASF26
 1903 01df 01       		.byte	0x1
 1904 01e0 58       		.byte	0x58
 1905 01e1 8C000000 		.4byte	0x8c
 1906 01e5 02       		.byte	0x2
 1907 01e6 91       		.byte	0x91
 1908 01e7 00       		.sleb128 0
 1909 01e8 0A       		.uleb128 0xa
 1910 01e9 25020000 		.4byte	.LASF27
 1911 01ed 01       		.byte	0x1
 1912 01ee 59       		.byte	0x59
ARM GAS  /tmp/ccun4gHj.s 			page 42


 1913 01ef A2000000 		.4byte	0xa2
 1914 01f3 02       		.byte	0x2
 1915 01f4 91       		.byte	0x91
 1916 01f5 6C       		.sleb128 -20
 1917 01f6 0B       		.uleb128 0xb
 1918 01f7 647000   		.ascii	"dp\000"
 1919 01fa 01       		.byte	0x1
 1920 01fb 5B       		.byte	0x5b
 1921 01fc A2000000 		.4byte	0xa2
 1922 0200 02       		.byte	0x2
 1923 0201 91       		.byte	0x91
 1924 0202 68       		.sleb128 -24
 1925 0203 0B       		.uleb128 0xb
 1926 0204 643300   		.ascii	"d3\000"
 1927 0207 01       		.byte	0x1
 1928 0208 5C       		.byte	0x5c
 1929 0209 A2000000 		.4byte	0xa2
 1930 020d 02       		.byte	0x2
 1931 020e 91       		.byte	0x91
 1932 020f 64       		.sleb128 -28
 1933 0210 0B       		.uleb128 0xb
 1934 0211 643200   		.ascii	"d2\000"
 1935 0214 01       		.byte	0x1
 1936 0215 5D       		.byte	0x5d
 1937 0216 A2000000 		.4byte	0xa2
 1938 021a 02       		.byte	0x2
 1939 021b 91       		.byte	0x91
 1940 021c 60       		.sleb128 -32
 1941 021d 0B       		.uleb128 0xb
 1942 021e 643100   		.ascii	"d1\000"
 1943 0221 01       		.byte	0x1
 1944 0222 5E       		.byte	0x5e
 1945 0223 A2000000 		.4byte	0xa2
 1946 0227 02       		.byte	0x2
 1947 0228 91       		.byte	0x91
 1948 0229 5C       		.sleb128 -36
 1949 022a 0B       		.uleb128 0xb
 1950 022b 643000   		.ascii	"d0\000"
 1951 022e 01       		.byte	0x1
 1952 022f 5F       		.byte	0x5f
 1953 0230 A2000000 		.4byte	0xa2
 1954 0234 02       		.byte	0x2
 1955 0235 91       		.byte	0x91
 1956 0236 58       		.sleb128 -40
 1957 0237 00       		.byte	0
 1958 0238 0C       		.uleb128 0xc
 1959 0239 01       		.byte	0x1
 1960 023a CE010000 		.4byte	.LASF29
 1961 023e 01       		.byte	0x1
 1962 023f 70       		.byte	0x70
 1963 0240 01       		.byte	0x1
 1964 0241 7E000000 		.4byte	0x7e
 1965 0245 00010000 		.4byte	.LFB9
 1966 0249 B8090000 		.4byte	.LFE9
 1967 024d 4C000000 		.4byte	.LLST2
 1968 0251 01       		.byte	0x1
 1969 0252 65030000 		.4byte	0x365
ARM GAS  /tmp/ccun4gHj.s 			page 43


 1970 0256 0A       		.uleb128 0xa
 1971 0257 73020000 		.4byte	.LASF30
 1972 025b 01       		.byte	0x1
 1973 025c 72       		.byte	0x72
 1974 025d 8C000000 		.4byte	0x8c
 1975 0261 02       		.byte	0x2
 1976 0262 91       		.byte	0x91
 1977 0263 6F       		.sleb128 -17
 1978 0264 0A       		.uleb128 0xa
 1979 0265 3A020000 		.4byte	.LASF31
 1980 0269 01       		.byte	0x1
 1981 026a 74       		.byte	0x74
 1982 026b A2000000 		.4byte	0xa2
 1983 026f 02       		.byte	0x2
 1984 0270 91       		.byte	0x91
 1985 0271 68       		.sleb128 -24
 1986 0272 0A       		.uleb128 0xa
 1987 0273 5D000000 		.4byte	.LASF32
 1988 0277 01       		.byte	0x1
 1989 0278 75       		.byte	0x75
 1990 0279 A2000000 		.4byte	0xa2
 1991 027d 02       		.byte	0x2
 1992 027e 91       		.byte	0x91
 1993 027f 64       		.sleb128 -28
 1994 0280 0A       		.uleb128 0xa
 1995 0281 B6010000 		.4byte	.LASF33
 1996 0285 01       		.byte	0x1
 1997 0286 78       		.byte	0x78
 1998 0287 A2000000 		.4byte	0xa2
 1999 028b 02       		.byte	0x2
 2000 028c 91       		.byte	0x91
 2001 028d 60       		.sleb128 -32
 2002 028e 0A       		.uleb128 0xa
 2003 028f 4A010000 		.4byte	.LASF34
 2004 0293 01       		.byte	0x1
 2005 0294 79       		.byte	0x79
 2006 0295 A2000000 		.4byte	0xa2
 2007 0299 02       		.byte	0x2
 2008 029a 91       		.byte	0x91
 2009 029b 5C       		.sleb128 -36
 2010 029c 0A       		.uleb128 0xa
 2011 029d F4010000 		.4byte	.LASF35
 2012 02a1 01       		.byte	0x1
 2013 02a2 7A       		.byte	0x7a
 2014 02a3 A2000000 		.4byte	0xa2
 2015 02a7 03       		.byte	0x3
 2016 02a8 91       		.byte	0x91
 2017 02a9 B07F     		.sleb128 -80
 2018 02ab 0A       		.uleb128 0xa
 2019 02ac 5A010000 		.4byte	.LASF36
 2020 02b0 01       		.byte	0x1
 2021 02b1 7D       		.byte	0x7d
 2022 02b2 A2000000 		.4byte	0xa2
 2023 02b6 02       		.byte	0x2
 2024 02b7 91       		.byte	0x91
 2025 02b8 58       		.sleb128 -40
 2026 02b9 0A       		.uleb128 0xa
ARM GAS  /tmp/ccun4gHj.s 			page 44


 2027 02ba 5C020000 		.4byte	.LASF37
 2028 02be 01       		.byte	0x1
 2029 02bf 80       		.byte	0x80
 2030 02c0 A2000000 		.4byte	0xa2
 2031 02c4 02       		.byte	0x2
 2032 02c5 91       		.byte	0x91
 2033 02c6 54       		.sleb128 -44
 2034 02c7 0A       		.uleb128 0xa
 2035 02c8 79000000 		.4byte	.LASF38
 2036 02cc 01       		.byte	0x1
 2037 02cd 83       		.byte	0x83
 2038 02ce A2000000 		.4byte	0xa2
 2039 02d2 02       		.byte	0x2
 2040 02d3 91       		.byte	0x91
 2041 02d4 50       		.sleb128 -48
 2042 02d5 0A       		.uleb128 0xa
 2043 02d6 85000000 		.4byte	.LASF39
 2044 02da 01       		.byte	0x1
 2045 02db 86       		.byte	0x86
 2046 02dc A2000000 		.4byte	0xa2
 2047 02e0 02       		.byte	0x2
 2048 02e1 91       		.byte	0x91
 2049 02e2 4C       		.sleb128 -52
 2050 02e3 0A       		.uleb128 0xa
 2051 02e4 8F000000 		.4byte	.LASF40
 2052 02e8 01       		.byte	0x1
 2053 02e9 8A       		.byte	0x8a
 2054 02ea A2000000 		.4byte	0xa2
 2055 02ee 02       		.byte	0x2
 2056 02ef 91       		.byte	0x91
 2057 02f0 48       		.sleb128 -56
 2058 02f1 0A       		.uleb128 0xa
 2059 02f2 0A030000 		.4byte	.LASF41
 2060 02f6 01       		.byte	0x1
 2061 02f7 8D       		.byte	0x8d
 2062 02f8 A2000000 		.4byte	0xa2
 2063 02fc 02       		.byte	0x2
 2064 02fd 91       		.byte	0x91
 2065 02fe 44       		.sleb128 -60
 2066 02ff 0A       		.uleb128 0xa
 2067 0300 2B010000 		.4byte	.LASF42
 2068 0304 01       		.byte	0x1
 2069 0305 90       		.byte	0x90
 2070 0306 65030000 		.4byte	0x365
 2071 030a 03       		.byte	0x3
 2072 030b 91       		.byte	0x91
 2073 030c AC7F     		.sleb128 -84
 2074 030e 0B       		.uleb128 0xb
 2075 030f 445000   		.ascii	"DP\000"
 2076 0312 01       		.byte	0x1
 2077 0313 95       		.byte	0x95
 2078 0314 8C000000 		.4byte	0x8c
 2079 0318 02       		.byte	0x2
 2080 0319 91       		.byte	0x91
 2081 031a 43       		.sleb128 -61
 2082 031b 0A       		.uleb128 0xa
 2083 031c 32010000 		.4byte	.LASF43
ARM GAS  /tmp/ccun4gHj.s 			page 45


 2084 0320 01       		.byte	0x1
 2085 0321 96       		.byte	0x96
 2086 0322 8C000000 		.4byte	0x8c
 2087 0326 02       		.byte	0x2
 2088 0327 91       		.byte	0x91
 2089 0328 42       		.sleb128 -62
 2090 0329 0A       		.uleb128 0xa
 2091 032a FB010000 		.4byte	.LASF44
 2092 032e 01       		.byte	0x1
 2093 032f 97       		.byte	0x97
 2094 0330 97000000 		.4byte	0x97
 2095 0334 02       		.byte	0x2
 2096 0335 91       		.byte	0x91
 2097 0336 40       		.sleb128 -64
 2098 0337 0A       		.uleb128 0xa
 2099 0338 1D020000 		.4byte	.LASF45
 2100 033c 01       		.byte	0x1
 2101 033d 98       		.byte	0x98
 2102 033e 7C030000 		.4byte	0x37c
 2103 0342 03       		.byte	0x3
 2104 0343 91       		.byte	0x91
 2105 0344 BF7F     		.sleb128 -65
 2106 0346 0A       		.uleb128 0xa
 2107 0347 03030000 		.4byte	.LASF46
 2108 034b 01       		.byte	0x1
 2109 034c 9E       		.byte	0x9e
 2110 034d A2000000 		.4byte	0xa2
 2111 0351 03       		.byte	0x3
 2112 0352 91       		.byte	0x91
 2113 0353 B87F     		.sleb128 -72
 2114 0355 0A       		.uleb128 0xa
 2115 0356 21030000 		.4byte	.LASF47
 2116 035a 01       		.byte	0x1
 2117 035b 9F       		.byte	0x9f
 2118 035c A2000000 		.4byte	0xa2
 2119 0360 03       		.byte	0x3
 2120 0361 91       		.byte	0x91
 2121 0362 B47F     		.sleb128 -76
 2122 0364 00       		.byte	0
 2123 0365 0D       		.uleb128 0xd
 2124 0366 8C000000 		.4byte	0x8c
 2125 036a 75030000 		.4byte	0x375
 2126 036e 0E       		.uleb128 0xe
 2127 036f 75030000 		.4byte	0x375
 2128 0373 03       		.byte	0x3
 2129 0374 00       		.byte	0
 2130 0375 02       		.uleb128 0x2
 2131 0376 04       		.byte	0x4
 2132 0377 07       		.byte	0x7
 2133 0378 19000000 		.4byte	.LASF48
 2134 037c 02       		.uleb128 0x2
 2135 037d 01       		.byte	0x1
 2136 037e 02       		.byte	0x2
 2137 037f D3010000 		.4byte	.LASF49
 2138 0383 0F       		.uleb128 0xf
 2139 0384 66020000 		.4byte	.LASF50
 2140 0388 01       		.byte	0x1
ARM GAS  /tmp/ccun4gHj.s 			page 46


 2141 0389 12       		.byte	0x12
 2142 038a 95030000 		.4byte	0x395
 2143 038e 01       		.byte	0x1
 2144 038f 05       		.byte	0x5
 2145 0390 03       		.byte	0x3
 2146 0391 00000000 		.4byte	BUTTONS_REGS
 2147 0395 10       		.uleb128 0x10
 2148 0396 04       		.byte	0x4
 2149 0397 9B030000 		.4byte	0x39b
 2150 039b 11       		.uleb128 0x11
 2151 039c A2000000 		.4byte	0xa2
 2152 03a0 0F       		.uleb128 0xf
 2153 03a1 D9010000 		.4byte	.LASF51
 2154 03a5 01       		.byte	0x1
 2155 03a6 13       		.byte	0x13
 2156 03a7 95030000 		.4byte	0x395
 2157 03ab 01       		.byte	0x1
 2158 03ac 05       		.byte	0x5
 2159 03ad 03       		.byte	0x3
 2160 03ae 00000000 		.4byte	SENSORS_REGS
 2161 03b2 0F       		.uleb128 0xf
 2162 03b3 31020000 		.4byte	.LASF52
 2163 03b7 01       		.byte	0x1
 2164 03b8 14       		.byte	0x14
 2165 03b9 95030000 		.4byte	0x395
 2166 03bd 01       		.byte	0x1
 2167 03be 05       		.byte	0x5
 2168 03bf 03       		.byte	0x3
 2169 03c0 00000000 		.4byte	LED_REGS
 2170 03c4 00       		.byte	0
 2171              		.section	.debug_abbrev,"",%progbits
 2172              	.Ldebug_abbrev0:
 2173 0000 01       		.uleb128 0x1
 2174 0001 11       		.uleb128 0x11
 2175 0002 01       		.byte	0x1
 2176 0003 25       		.uleb128 0x25
 2177 0004 0E       		.uleb128 0xe
 2178 0005 13       		.uleb128 0x13
 2179 0006 0B       		.uleb128 0xb
 2180 0007 03       		.uleb128 0x3
 2181 0008 0E       		.uleb128 0xe
 2182 0009 1B       		.uleb128 0x1b
 2183 000a 0E       		.uleb128 0xe
 2184 000b 11       		.uleb128 0x11
 2185 000c 01       		.uleb128 0x1
 2186 000d 12       		.uleb128 0x12
 2187 000e 01       		.uleb128 0x1
 2188 000f 10       		.uleb128 0x10
 2189 0010 06       		.uleb128 0x6
 2190 0011 00       		.byte	0
 2191 0012 00       		.byte	0
 2192 0013 02       		.uleb128 0x2
 2193 0014 24       		.uleb128 0x24
 2194 0015 00       		.byte	0
 2195 0016 0B       		.uleb128 0xb
 2196 0017 0B       		.uleb128 0xb
 2197 0018 3E       		.uleb128 0x3e
ARM GAS  /tmp/ccun4gHj.s 			page 47


 2198 0019 0B       		.uleb128 0xb
 2199 001a 03       		.uleb128 0x3
 2200 001b 0E       		.uleb128 0xe
 2201 001c 00       		.byte	0
 2202 001d 00       		.byte	0
 2203 001e 03       		.uleb128 0x3
 2204 001f 16       		.uleb128 0x16
 2205 0020 00       		.byte	0
 2206 0021 03       		.uleb128 0x3
 2207 0022 0E       		.uleb128 0xe
 2208 0023 3A       		.uleb128 0x3a
 2209 0024 0B       		.uleb128 0xb
 2210 0025 3B       		.uleb128 0x3b
 2211 0026 0B       		.uleb128 0xb
 2212 0027 49       		.uleb128 0x49
 2213 0028 13       		.uleb128 0x13
 2214 0029 00       		.byte	0
 2215 002a 00       		.byte	0
 2216 002b 04       		.uleb128 0x4
 2217 002c 24       		.uleb128 0x24
 2218 002d 00       		.byte	0
 2219 002e 0B       		.uleb128 0xb
 2220 002f 0B       		.uleb128 0xb
 2221 0030 3E       		.uleb128 0x3e
 2222 0031 0B       		.uleb128 0xb
 2223 0032 03       		.uleb128 0x3
 2224 0033 08       		.uleb128 0x8
 2225 0034 00       		.byte	0
 2226 0035 00       		.byte	0
 2227 0036 05       		.uleb128 0x5
 2228 0037 2E       		.uleb128 0x2e
 2229 0038 01       		.byte	0x1
 2230 0039 3F       		.uleb128 0x3f
 2231 003a 0C       		.uleb128 0xc
 2232 003b 03       		.uleb128 0x3
 2233 003c 0E       		.uleb128 0xe
 2234 003d 3A       		.uleb128 0x3a
 2235 003e 0B       		.uleb128 0xb
 2236 003f 3B       		.uleb128 0x3b
 2237 0040 0B       		.uleb128 0xb
 2238 0041 27       		.uleb128 0x27
 2239 0042 0C       		.uleb128 0xc
 2240 0043 11       		.uleb128 0x11
 2241 0044 01       		.uleb128 0x1
 2242 0045 12       		.uleb128 0x12
 2243 0046 01       		.uleb128 0x1
 2244 0047 40       		.uleb128 0x40
 2245 0048 06       		.uleb128 0x6
 2246 0049 9742     		.uleb128 0x2117
 2247 004b 0C       		.uleb128 0xc
 2248 004c 01       		.uleb128 0x1
 2249 004d 13       		.uleb128 0x13
 2250 004e 00       		.byte	0
 2251 004f 00       		.byte	0
 2252 0050 06       		.uleb128 0x6
 2253 0051 05       		.uleb128 0x5
 2254 0052 00       		.byte	0
ARM GAS  /tmp/ccun4gHj.s 			page 48


 2255 0053 03       		.uleb128 0x3
 2256 0054 0E       		.uleb128 0xe
 2257 0055 3A       		.uleb128 0x3a
 2258 0056 0B       		.uleb128 0xb
 2259 0057 3B       		.uleb128 0x3b
 2260 0058 0B       		.uleb128 0xb
 2261 0059 49       		.uleb128 0x49
 2262 005a 13       		.uleb128 0x13
 2263 005b 02       		.uleb128 0x2
 2264 005c 0A       		.uleb128 0xa
 2265 005d 00       		.byte	0
 2266 005e 00       		.byte	0
 2267 005f 07       		.uleb128 0x7
 2268 0060 2E       		.uleb128 0x2e
 2269 0061 00       		.byte	0
 2270 0062 3F       		.uleb128 0x3f
 2271 0063 0C       		.uleb128 0xc
 2272 0064 03       		.uleb128 0x3
 2273 0065 0E       		.uleb128 0xe
 2274 0066 3A       		.uleb128 0x3a
 2275 0067 0B       		.uleb128 0xb
 2276 0068 3B       		.uleb128 0x3b
 2277 0069 0B       		.uleb128 0xb
 2278 006a 27       		.uleb128 0x27
 2279 006b 0C       		.uleb128 0xc
 2280 006c 49       		.uleb128 0x49
 2281 006d 13       		.uleb128 0x13
 2282 006e 11       		.uleb128 0x11
 2283 006f 01       		.uleb128 0x1
 2284 0070 12       		.uleb128 0x12
 2285 0071 01       		.uleb128 0x1
 2286 0072 40       		.uleb128 0x40
 2287 0073 0A       		.uleb128 0xa
 2288 0074 9742     		.uleb128 0x2117
 2289 0076 0C       		.uleb128 0xc
 2290 0077 00       		.byte	0
 2291 0078 00       		.byte	0
 2292 0079 08       		.uleb128 0x8
 2293 007a 2E       		.uleb128 0x2e
 2294 007b 01       		.byte	0x1
 2295 007c 3F       		.uleb128 0x3f
 2296 007d 0C       		.uleb128 0xc
 2297 007e 03       		.uleb128 0x3
 2298 007f 0E       		.uleb128 0xe
 2299 0080 3A       		.uleb128 0x3a
 2300 0081 0B       		.uleb128 0xb
 2301 0082 3B       		.uleb128 0x3b
 2302 0083 0B       		.uleb128 0xb
 2303 0084 27       		.uleb128 0x27
 2304 0085 0C       		.uleb128 0xc
 2305 0086 49       		.uleb128 0x49
 2306 0087 13       		.uleb128 0x13
 2307 0088 11       		.uleb128 0x11
 2308 0089 01       		.uleb128 0x1
 2309 008a 12       		.uleb128 0x12
 2310 008b 01       		.uleb128 0x1
 2311 008c 40       		.uleb128 0x40
ARM GAS  /tmp/ccun4gHj.s 			page 49


 2312 008d 06       		.uleb128 0x6
 2313 008e 9742     		.uleb128 0x2117
 2314 0090 0C       		.uleb128 0xc
 2315 0091 01       		.uleb128 0x1
 2316 0092 13       		.uleb128 0x13
 2317 0093 00       		.byte	0
 2318 0094 00       		.byte	0
 2319 0095 09       		.uleb128 0x9
 2320 0096 05       		.uleb128 0x5
 2321 0097 00       		.byte	0
 2322 0098 03       		.uleb128 0x3
 2323 0099 08       		.uleb128 0x8
 2324 009a 3A       		.uleb128 0x3a
 2325 009b 0B       		.uleb128 0xb
 2326 009c 3B       		.uleb128 0x3b
 2327 009d 0B       		.uleb128 0xb
 2328 009e 49       		.uleb128 0x49
 2329 009f 13       		.uleb128 0x13
 2330 00a0 02       		.uleb128 0x2
 2331 00a1 0A       		.uleb128 0xa
 2332 00a2 00       		.byte	0
 2333 00a3 00       		.byte	0
 2334 00a4 0A       		.uleb128 0xa
 2335 00a5 34       		.uleb128 0x34
 2336 00a6 00       		.byte	0
 2337 00a7 03       		.uleb128 0x3
 2338 00a8 0E       		.uleb128 0xe
 2339 00a9 3A       		.uleb128 0x3a
 2340 00aa 0B       		.uleb128 0xb
 2341 00ab 3B       		.uleb128 0x3b
 2342 00ac 0B       		.uleb128 0xb
 2343 00ad 49       		.uleb128 0x49
 2344 00ae 13       		.uleb128 0x13
 2345 00af 02       		.uleb128 0x2
 2346 00b0 0A       		.uleb128 0xa
 2347 00b1 00       		.byte	0
 2348 00b2 00       		.byte	0
 2349 00b3 0B       		.uleb128 0xb
 2350 00b4 34       		.uleb128 0x34
 2351 00b5 00       		.byte	0
 2352 00b6 03       		.uleb128 0x3
 2353 00b7 08       		.uleb128 0x8
 2354 00b8 3A       		.uleb128 0x3a
 2355 00b9 0B       		.uleb128 0xb
 2356 00ba 3B       		.uleb128 0x3b
 2357 00bb 0B       		.uleb128 0xb
 2358 00bc 49       		.uleb128 0x49
 2359 00bd 13       		.uleb128 0x13
 2360 00be 02       		.uleb128 0x2
 2361 00bf 0A       		.uleb128 0xa
 2362 00c0 00       		.byte	0
 2363 00c1 00       		.byte	0
 2364 00c2 0C       		.uleb128 0xc
 2365 00c3 2E       		.uleb128 0x2e
 2366 00c4 01       		.byte	0x1
 2367 00c5 3F       		.uleb128 0x3f
 2368 00c6 0C       		.uleb128 0xc
ARM GAS  /tmp/ccun4gHj.s 			page 50


 2369 00c7 03       		.uleb128 0x3
 2370 00c8 0E       		.uleb128 0xe
 2371 00c9 3A       		.uleb128 0x3a
 2372 00ca 0B       		.uleb128 0xb
 2373 00cb 3B       		.uleb128 0x3b
 2374 00cc 0B       		.uleb128 0xb
 2375 00cd 27       		.uleb128 0x27
 2376 00ce 0C       		.uleb128 0xc
 2377 00cf 49       		.uleb128 0x49
 2378 00d0 13       		.uleb128 0x13
 2379 00d1 11       		.uleb128 0x11
 2380 00d2 01       		.uleb128 0x1
 2381 00d3 12       		.uleb128 0x12
 2382 00d4 01       		.uleb128 0x1
 2383 00d5 40       		.uleb128 0x40
 2384 00d6 06       		.uleb128 0x6
 2385 00d7 9642     		.uleb128 0x2116
 2386 00d9 0C       		.uleb128 0xc
 2387 00da 01       		.uleb128 0x1
 2388 00db 13       		.uleb128 0x13
 2389 00dc 00       		.byte	0
 2390 00dd 00       		.byte	0
 2391 00de 0D       		.uleb128 0xd
 2392 00df 01       		.uleb128 0x1
 2393 00e0 01       		.byte	0x1
 2394 00e1 49       		.uleb128 0x49
 2395 00e2 13       		.uleb128 0x13
 2396 00e3 01       		.uleb128 0x1
 2397 00e4 13       		.uleb128 0x13
 2398 00e5 00       		.byte	0
 2399 00e6 00       		.byte	0
 2400 00e7 0E       		.uleb128 0xe
 2401 00e8 21       		.uleb128 0x21
 2402 00e9 00       		.byte	0
 2403 00ea 49       		.uleb128 0x49
 2404 00eb 13       		.uleb128 0x13
 2405 00ec 2F       		.uleb128 0x2f
 2406 00ed 0B       		.uleb128 0xb
 2407 00ee 00       		.byte	0
 2408 00ef 00       		.byte	0
 2409 00f0 0F       		.uleb128 0xf
 2410 00f1 34       		.uleb128 0x34
 2411 00f2 00       		.byte	0
 2412 00f3 03       		.uleb128 0x3
 2413 00f4 0E       		.uleb128 0xe
 2414 00f5 3A       		.uleb128 0x3a
 2415 00f6 0B       		.uleb128 0xb
 2416 00f7 3B       		.uleb128 0x3b
 2417 00f8 0B       		.uleb128 0xb
 2418 00f9 49       		.uleb128 0x49
 2419 00fa 13       		.uleb128 0x13
 2420 00fb 3F       		.uleb128 0x3f
 2421 00fc 0C       		.uleb128 0xc
 2422 00fd 02       		.uleb128 0x2
 2423 00fe 0A       		.uleb128 0xa
 2424 00ff 00       		.byte	0
 2425 0100 00       		.byte	0
ARM GAS  /tmp/ccun4gHj.s 			page 51


 2426 0101 10       		.uleb128 0x10
 2427 0102 0F       		.uleb128 0xf
 2428 0103 00       		.byte	0
 2429 0104 0B       		.uleb128 0xb
 2430 0105 0B       		.uleb128 0xb
 2431 0106 49       		.uleb128 0x49
 2432 0107 13       		.uleb128 0x13
 2433 0108 00       		.byte	0
 2434 0109 00       		.byte	0
 2435 010a 11       		.uleb128 0x11
 2436 010b 35       		.uleb128 0x35
 2437 010c 00       		.byte	0
 2438 010d 49       		.uleb128 0x49
 2439 010e 13       		.uleb128 0x13
 2440 010f 00       		.byte	0
 2441 0110 00       		.byte	0
 2442 0111 00       		.byte	0
 2443              		.section	.debug_loc,"",%progbits
 2444              	.Ldebug_loc0:
 2445              	.LLST0:
 2446 0000 00000000 		.4byte	.LFB0-.Ltext0
 2447 0004 02000000 		.4byte	.LCFI0-.Ltext0
 2448 0008 0200     		.2byte	0x2
 2449 000a 7D       		.byte	0x7d
 2450 000b 00       		.sleb128 0
 2451 000c 02000000 		.4byte	.LCFI0-.Ltext0
 2452 0010 18000000 		.4byte	.LFE0-.Ltext0
 2453 0014 0200     		.2byte	0x2
 2454 0016 7D       		.byte	0x7d
 2455 0017 08       		.sleb128 8
 2456 0018 00000000 		.4byte	0
 2457 001c 00000000 		.4byte	0
 2458              	.LLST1:
 2459 0020 88000000 		.4byte	.LFB8-.Ltext0
 2460 0024 8A000000 		.4byte	.LCFI1-.Ltext0
 2461 0028 0200     		.2byte	0x2
 2462 002a 7D       		.byte	0x7d
 2463 002b 00       		.sleb128 0
 2464 002c 8A000000 		.4byte	.LCFI1-.Ltext0
 2465 0030 8C000000 		.4byte	.LCFI2-.Ltext0
 2466 0034 0200     		.2byte	0x2
 2467 0036 7D       		.byte	0x7d
 2468 0037 0C       		.sleb128 12
 2469 0038 8C000000 		.4byte	.LCFI2-.Ltext0
 2470 003c FE000000 		.4byte	.LFE8-.Ltext0
 2471 0040 0200     		.2byte	0x2
 2472 0042 7D       		.byte	0x7d
 2473 0043 30       		.sleb128 48
 2474 0044 00000000 		.4byte	0
 2475 0048 00000000 		.4byte	0
 2476              	.LLST2:
 2477 004c 00010000 		.4byte	.LFB9-.Ltext0
 2478 0050 02010000 		.4byte	.LCFI3-.Ltext0
 2479 0054 0200     		.2byte	0x2
 2480 0056 7D       		.byte	0x7d
 2481 0057 00       		.sleb128 0
 2482 0058 02010000 		.4byte	.LCFI3-.Ltext0
ARM GAS  /tmp/ccun4gHj.s 			page 52


 2483 005c 04010000 		.4byte	.LCFI4-.Ltext0
 2484 0060 0200     		.2byte	0x2
 2485 0062 7D       		.byte	0x7d
 2486 0063 0C       		.sleb128 12
 2487 0064 04010000 		.4byte	.LCFI4-.Ltext0
 2488 0068 B8090000 		.4byte	.LFE9-.Ltext0
 2489 006c 0300     		.2byte	0x3
 2490 006e 7D       		.byte	0x7d
 2491 006f E000     		.sleb128 96
 2492 0071 00000000 		.4byte	0
 2493 0075 00000000 		.4byte	0
 2494              		.section	.debug_aranges,"",%progbits
 2495 0000 1C000000 		.4byte	0x1c
 2496 0004 0200     		.2byte	0x2
 2497 0006 00000000 		.4byte	.Ldebug_info0
 2498 000a 04       		.byte	0x4
 2499 000b 00       		.byte	0
 2500 000c 0000     		.2byte	0
 2501 000e 0000     		.2byte	0
 2502 0010 00000000 		.4byte	.Ltext0
 2503 0014 B8090000 		.4byte	.Letext0-.Ltext0
 2504 0018 00000000 		.4byte	0
 2505 001c 00000000 		.4byte	0
 2506              		.section	.debug_line,"",%progbits
 2507              	.Ldebug_line0:
 2508 0000 BC010000 		.section	.debug_str,"MS",%progbits,1
 2508      0200BF00 
 2508      00000201 
 2508      FB0E0D00 
 2508      01010101 
 2509              	.LASF28:
 2510 0000 636F6E6E 		.ascii	"connect_digits\000"
 2510      6563745F 
 2510      64696769 
 2510      747300
 2511              	.LASF2:
 2512 000f 73686F72 		.ascii	"short int\000"
 2512      7420696E 
 2512      7400
 2513              	.LASF48:
 2514 0019 73697A65 		.ascii	"sizetype\000"
 2514      74797065 
 2514      00
 2515              	.LASF56:
 2516 0022 77726974 		.ascii	"write_led\000"
 2516      655F6C65 
 2516      6400
 2517              	.LASF26:
 2518 002c 64696769 		.ascii	"digit0\000"
 2518      743000
 2519              	.LASF25:
 2520 0033 64696769 		.ascii	"digit1\000"
 2520      743100
 2521              	.LASF7:
 2522 003a 5F5F7569 		.ascii	"__uint32_t\000"
 2522      6E743332 
 2522      5F7400
ARM GAS  /tmp/ccun4gHj.s 			page 53


 2523              	.LASF23:
 2524 0045 64696769 		.ascii	"digit3\000"
 2524      743300
 2525              	.LASF4:
 2526 004c 5F5F7569 		.ascii	"__uint16_t\000"
 2526      6E743136 
 2526      5F7400
 2527              	.LASF22:
 2528 0057 76616C75 		.ascii	"value\000"
 2528      6500
 2529              	.LASF32:
 2530 005d 6F646F6D 		.ascii	"odometer\000"
 2530      65746572 
 2530      00
 2531              	.LASF20:
 2532 0066 72656164 		.ascii	"read_nTrip\000"
 2532      5F6E5472 
 2532      697000
 2533              	.LASF12:
 2534 0071 75696E74 		.ascii	"uint8_t\000"
 2534      385F7400 
 2535              	.LASF38:
 2536 0079 73706565 		.ascii	"speedometer\000"
 2536      646F6D65 
 2536      74657200 
 2537              	.LASF39:
 2538 0085 666F726B 		.ascii	"fork_time\000"
 2538      5F74696D 
 2538      6500
 2539              	.LASF40:
 2540 008f 63616465 		.ascii	"cadence_meter\000"
 2540      6E63655F 
 2540      6D657465 
 2540      7200
 2541              	.LASF15:
 2542 009d 72656164 		.ascii	"read_nFork\000"
 2542      5F6E466F 
 2542      726B00
 2543              	.LASF9:
 2544 00a8 6C6F6E67 		.ascii	"long long int\000"
 2544      206C6F6E 
 2544      6720696E 
 2544      7400
 2545              	.LASF6:
 2546 00b6 6C6F6E67 		.ascii	"long int\000"
 2546      20696E74 
 2546      00
 2547              	.LASF19:
 2548 00bf 72656164 		.ascii	"read_nMode\000"
 2548      5F6E4D6F 
 2548      646500
 2549              	.LASF55:
 2550 00ca 2F686F6D 		.ascii	"/home/yz17g22/mydocuments/design/system_on_chip/git"
 2550      652F797A 
 2550      31376732 
 2550      322F6D79 
 2550      646F6375 
ARM GAS  /tmp/ccun4gHj.s 			page 54


 2551 00fd 6875622F 		.ascii	"hub/local_chip/software\000"
 2551      6C6F6361 
 2551      6C5F6368 
 2551      69702F73 
 2551      6F667477 
 2552              	.LASF3:
 2553 0115 5F5F7569 		.ascii	"__uint8_t\000"
 2553      6E74385F 
 2553      7400
 2554              	.LASF54:
 2555 011f 636F6465 		.ascii	"code/main.c\000"
 2555      2F6D6169 
 2555      6E2E6300 
 2556              	.LASF42:
 2557 012b 64696769 		.ascii	"digits\000"
 2557      747300
 2558              	.LASF43:
 2559 0132 64696769 		.ascii	"digit_index\000"
 2559      745F696E 
 2559      64657800 
 2560              	.LASF16:
 2561 013e 72656164 		.ascii	"read_nCrank\000"
 2561      5F6E4372 
 2561      616E6B00 
 2562              	.LASF34:
 2563 014a 61636375 		.ascii	"accumulate_time\000"
 2563      6D756C61 
 2563      74655F74 
 2563      696D6500 
 2564              	.LASF36:
 2565 015a 61765F73 		.ascii	"av_ssni_419\000"
 2565      736E695F 
 2565      34313900 
 2566              	.LASF1:
 2567 0166 756E7369 		.ascii	"unsigned char\000"
 2567      676E6564 
 2567      20636861 
 2567      7200
 2568              	.LASF0:
 2569 0174 7369676E 		.ascii	"signed char\000"
 2569      65642063 
 2569      68617200 
 2570              	.LASF10:
 2571 0180 6C6F6E67 		.ascii	"long long unsigned int\000"
 2571      206C6F6E 
 2571      6720756E 
 2571      7369676E 
 2571      65642069 
 2572              	.LASF14:
 2573 0197 75696E74 		.ascii	"uint32_t\000"
 2573      33325F74 
 2573      00
 2574              	.LASF11:
 2575 01a0 756E7369 		.ascii	"unsigned int\000"
 2575      676E6564 
 2575      20696E74 
 2575      00
ARM GAS  /tmp/ccun4gHj.s 			page 55


 2576              	.LASF13:
 2577 01ad 75696E74 		.ascii	"uint16_t\000"
 2577      31365F74 
 2577      00
 2578              	.LASF33:
 2579 01b6 74696D65 		.ascii	"time\000"
 2579      00
 2580              	.LASF5:
 2581 01bb 73686F72 		.ascii	"short unsigned int\000"
 2581      7420756E 
 2581      7369676E 
 2581      65642069 
 2581      6E7400
 2582              	.LASF29:
 2583 01ce 6D61696E 		.ascii	"main\000"
 2583      00
 2584              	.LASF49:
 2585 01d3 5F426F6F 		.ascii	"_Bool\000"
 2585      6C00
 2586              	.LASF51:
 2587 01d9 53454E53 		.ascii	"SENSORS_REGS\000"
 2587      4F52535F 
 2587      52454753 
 2587      00
 2588              	.LASF17:
 2589 01e6 72656164 		.ascii	"read_fork_cnt\000"
 2589      5F666F72 
 2589      6B5F636E 
 2589      7400
 2590              	.LASF35:
 2591 01f4 6D696E75 		.ascii	"minute\000"
 2591      746500
 2592              	.LASF44:
 2593 01fb 44697363 		.ascii	"DiscreteDisplay\000"
 2593      72657465 
 2593      44697370 
 2593      6C617900 
 2594              	.LASF8:
 2595 020b 6C6F6E67 		.ascii	"long unsigned int\000"
 2595      20756E73 
 2595      69676E65 
 2595      6420696E 
 2595      7400
 2596              	.LASF45:
 2597 021d 64697370 		.ascii	"display\000"
 2597      6C617900 
 2598              	.LASF27:
 2599 0225 6C65645F 		.ascii	"led_display\000"
 2599      64697370 
 2599      6C617900 
 2600              	.LASF52:
 2601 0231 4C45445F 		.ascii	"LED_REGS\000"
 2601      52454753 
 2601      00
 2602              	.LASF31:
 2603 023a 666F726B 		.ascii	"fork_counter\000"
 2603      5F636F75 
ARM GAS  /tmp/ccun4gHj.s 			page 56


 2603      6E746572 
 2603      00
 2604              	.LASF21:
 2605 0247 72656164 		.ascii	"read_together_button\000"
 2605      5F746F67 
 2605      65746865 
 2605      725F6275 
 2605      74746F6E 
 2606              	.LASF37:
 2607 025c 6D61785F 		.ascii	"max_speed\000"
 2607      73706565 
 2607      6400
 2608              	.LASF50:
 2609 0266 42555454 		.ascii	"BUTTONS_REGS\000"
 2609      4F4E535F 
 2609      52454753 
 2609      00
 2610              	.LASF30:
 2611 0273 4D6F6465 		.ascii	"Mode\000"
 2611      00
 2612              	.LASF24:
 2613 0278 64696769 		.ascii	"digit2\000"
 2613      743200
 2614              	.LASF53:
 2615 027f 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 2615      43313120 
 2615      352E342E 
 2615      31203230 
 2615      31363039 
 2616 02b2 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m0 -mthumb -gdwa"
 2616      20726576 
 2616      6973696F 
 2616      6E203234 
 2616      30343936 
 2617 02e5 72662D32 		.ascii	"rf-2 -O0 -fomit-frame-pointer\000"
 2617      202D4F30 
 2617      202D666F 
 2617      6D69742D 
 2617      6672616D 
 2618              	.LASF46:
 2619 0303 77656967 		.ascii	"weight\000"
 2619      687400
 2620              	.LASF41:
 2621 030a 63616C6F 		.ascii	"calorie\000"
 2621      72696500 
 2622              	.LASF18:
 2623 0312 72656164 		.ascii	"read_pedal_cnt\000"
 2623      5F706564 
 2623      616C5F63 
 2623      6E7400
 2624              	.LASF47:
 2625 0321 77686565 		.ascii	"wheel_size\000"
 2625      6C5F7369 
 2625      7A6500
 2626              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/ccun4gHj.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccun4gHj.s:57     .data:00000000 BUTTONS_REGS
     /tmp/ccun4gHj.s:54     .data:00000000 $d
     /tmp/ccun4gHj.s:63     .data:00000004 SENSORS_REGS
     /tmp/ccun4gHj.s:69     .data:00000008 LED_REGS
     /tmp/ccun4gHj.s:72     .text:00000000 $t
     /tmp/ccun4gHj.s:77     .text:00000000 write_led
     /tmp/ccun4gHj.s:102    .text:00000014 $d
     /tmp/ccun4gHj.s:106    .text:00000018 $t
     /tmp/ccun4gHj.s:111    .text:00000018 read_nFork
     /tmp/ccun4gHj.s:129    .text:00000024 $d
     /tmp/ccun4gHj.s:133    .text:00000028 $t
     /tmp/ccun4gHj.s:138    .text:00000028 read_nCrank
     /tmp/ccun4gHj.s:157    .text:00000034 $d
     /tmp/ccun4gHj.s:161    .text:00000038 $t
     /tmp/ccun4gHj.s:166    .text:00000038 read_fork_cnt
     /tmp/ccun4gHj.s:185    .text:00000044 $d
     /tmp/ccun4gHj.s:189    .text:00000048 $t
     /tmp/ccun4gHj.s:194    .text:00000048 read_pedal_cnt
     /tmp/ccun4gHj.s:213    .text:00000054 $d
     /tmp/ccun4gHj.s:217    .text:00000058 $t
     /tmp/ccun4gHj.s:222    .text:00000058 read_nMode
     /tmp/ccun4gHj.s:240    .text:00000064 $d
     /tmp/ccun4gHj.s:244    .text:00000068 $t
     /tmp/ccun4gHj.s:249    .text:00000068 read_nTrip
     /tmp/ccun4gHj.s:268    .text:00000074 $d
     /tmp/ccun4gHj.s:272    .text:00000078 $t
     /tmp/ccun4gHj.s:277    .text:00000078 read_together_button
     /tmp/ccun4gHj.s:296    .text:00000084 $d
     /tmp/ccun4gHj.s:300    .text:00000088 $t
     /tmp/ccun4gHj.s:305    .text:00000088 connect_digits
     /tmp/ccun4gHj.s:397    .text:00000100 main
     /tmp/ccun4gHj.s:581    .rodata:00000000 $d
     /tmp/ccun4gHj.s:1046   .text:00000568 $d
     /tmp/ccun4gHj.s:1049   .text:0000056c $t
     /tmp/ccun4gHj.s:1649   .text:0000099c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidivmod
__aeabi_uidiv
